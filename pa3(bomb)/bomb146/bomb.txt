
bomb:     file format elf32-i386
bomb
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08048980

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x00003638 memsz 0x00003638 flags r-x
    LOAD off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**12
         filesz 0x000008b8 memsz 0x00000f88 flags rw-
 DYNAMIC off    0x00003f14 vaddr 0x0804cf14 paddr 0x0804cf14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002bc4 vaddr 0x0804abc4 paddr 0x0804abc4 align 2**2
         filesz 0x0000011c memsz 0x0000011c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00003f08 vaddr 0x0804cf08 paddr 0x0804cf08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x08048760
  FINI                 0x0804a1c4
  INIT_ARRAY           0x0804cf08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x0804cf0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804840c
  SYMTAB               0x080481dc
  STRSZ                0x00000195
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804d000
  PLTRELSZ             0x000000e8
  PLTREL               0x00000011
  JMPREL               0x08048678
  REL                  0x08048658
  RELSZ                0x00000020
  RELENT               0x00000008
  VERNEED              0x080485e8
  VERNEEDNUM           0x00000001
  VERSYM               0x080485a2

Version References:
  required from libc.so.6:
    0x0d696913 0x00 07 GLIBC_2.3
    0x0d696911 0x00 06 GLIBC_2.1
    0x0d696917 0x00 05 GLIBC_2.7
    0x09691974 0x00 04 GLIBC_2.3.4
    0x0d696914 0x00 03 GLIBC_2.4
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000030  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000230  080481dc  080481dc  000001dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000195  0804840c  0804840c  0000040c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000046  080485a2  080485a2  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000070  080485e8  080485e8  000005e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000020  08048658  08048658  00000658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      000000e8  08048678  08048678  00000678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  08048760  08048760  00000760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          000001e0  08048790  08048790  00000790  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  08048970  08048970  00000970  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00001842  08048980  08048980  00000980  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  0804a1c4  0804a1c4  000021c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000009e1  0804a1e0  0804a1e0  000021e0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000011c  0804abc4  0804abc4  00002bc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000958  0804ace0  0804ace0  00002ce0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  0804cf08  0804cf08  00003f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  0804cf0c  0804cf0c  00003f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  0804cf10  0804cf10  00003f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  0804cf14  0804cf14  00003f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  0804cffc  0804cffc  00003ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000080  0804d000  0804d000  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000740  0804d080  0804d080  00004080  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          000006d0  0804d7c0  0804d7c0  000047c0  2**5
                  ALLOC
 26 .comment      00000035  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY
 27 .debug_aranges 00000020  00000000  00000000  000047f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_info   00000857  00000000  00000000  00004815  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_abbrev 00000194  00000000  00000000  0000506c  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_line   0000016a  00000000  00000000  00005200  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_str    00000323  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING
 32 .debug_loc    000001cd  00000000  00000000  0000568d  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481dc l    d  .dynsym	00000000              .dynsym
0804840c l    d  .dynstr	00000000              .dynstr
080485a2 l    d  .gnu.version	00000000              .gnu.version
080485e8 l    d  .gnu.version_r	00000000              .gnu.version_r
08048658 l    d  .rel.dyn	00000000              .rel.dyn
08048678 l    d  .rel.plt	00000000              .rel.plt
08048760 l    d  .init	00000000              .init
08048790 l    d  .plt	00000000              .plt
08048970 l    d  .plt.got	00000000              .plt.got
08048980 l    d  .text	00000000              .text
0804a1c4 l    d  .fini	00000000              .fini
0804a1e0 l    d  .rodata	00000000              .rodata
0804abc4 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
0804ace0 l    d  .eh_frame	00000000              .eh_frame
0804cf08 l    d  .init_array	00000000              .init_array
0804cf0c l    d  .fini_array	00000000              .fini_array
0804cf10 l    d  .jcr	00000000              .jcr
0804cf14 l    d  .dynamic	00000000              .dynamic
0804cffc l    d  .got	00000000              .got
0804d000 l    d  .got.plt	00000000              .got.plt
0804d080 l    d  .data	00000000              .data
0804d7c0 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_loc	00000000              .debug_loc
00000000 l    df *ABS*	00000000              crtstuff.c
0804cf10 l     O .jcr	00000000              __JCR_LIST__
080489c0 l     F .text	00000000              deregister_tm_clones
080489f0 l     F .text	00000000              register_tm_clones
08048a30 l     F .text	00000000              __do_global_dtors_aux
0804d7e8 l     O .bss	00000001              completed.7209
0804cf0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
08048a50 l     F .text	00000000              frame_dummy
0804cf08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              bomb.c
00000000 l    df *ABS*	00000000              phases.c
0804a400 l     O .rodata	00000040              array.3267
00000000 l    df *ABS*	00000000              support.c
08049118 l     F .text	0000005a              sig_handler
00000000 l    df *ABS*	00000000              driverlib.c
08049634 l     F .text	000000d4              rio_readlineb
00000000 l    df *ABS*	00000000              crtstuff.c
0804b634 l     O .eh_frame	00000000              __FRAME_END__
0804cf10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
0804cf0c l       .init_array	00000000              __init_array_end
0804cf14 l     O .dynamic	00000000              _DYNAMIC
0804cf08 l       .init_array	00000000              __init_array_start
0804abc4 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804d000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
0804a1c0 g     F .text	00000002              __libc_csu_fini
0804933d g     F .text	00000045              skip
080495db g     F .text	00000036              phase_defused
0804d0c4 g     O .data	0000000c              n31
00000000       F *UND*	00000000              read@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
080489b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804d080  w      .data	00000000              data_start
0804d800 g     O .bss	00000640              input_strings
00000000       F *UND*	00000000              fflush@@GLIBC_2.0
0804d0dc g     O .data	0000000c              n33
0804d7c0 g     O .bss	00000004              stderr@@GLIBC_2.0
00000000       F *UND*	00000000              fgets@@GLIBC_2.0
0804d7c0 g       .data	00000000              _edata
00000000       F *UND*	00000000              signal@@GLIBC_2.0
00000000       F *UND*	00000000              sleep@@GLIBC_2.0
0804d118 g     O .data	0000000c              n44
0804d130 g     O .data	0000000c              n46
0804d100 g     O .data	0000000c              n42
0804d148 g     O .data	0000000c              n48
0804a1c4 g     F .fini	00000000              _fini
00000000       F *UND*	00000000              alarm@@GLIBC_2.0
00000000       F *UND*	00000000              __stack_chk_fail@@GLIBC_2.4
0804d7ec g     O .bss	00000004              num_input_strings
08048d93 g     F .text	000000a9              phase_5
08049303 g     F .text	00000002              initialize_bomb_solve
08048f0f g     F .text	0000008d              phase_7
08049305 g     F .text	00000038              blank_line
080490d3 g     F .text	00000045              phase_9
08049708 g     F .text	000007ca              submitr
08048caa g     F .text	0000007e              phase_3
08048c2d g     F .text	0000005c              phase_1
08049172 g     F .text	0000001f              invalid_phase
08049f07 g     F .text	000001d2              init_driver
00000000       F *UND*	00000000              strcpy@@GLIBC_2.0
0804d16c g     O .data	0000000c              node3
0804946a g     F .text	0000003d              explode_bomb
00000000       F *UND*	00000000              gethostname@@GLIBC_2.0
0804d154 g     O .data	0000000c              node1
00000000       F *UND*	00000000              getenv@@GLIBC_2.0
00000000       F *UND*	00000000              malloc@@GLIBC_2.0
0804d080 g       .data	00000000              __data_start
00000000       F *UND*	00000000              puts@@GLIBC_2.0
0804d184 g     O .data	0000000c              node5
00000000       F *UND*	00000000              __memmove_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              __gmon_start__
00000000       F *UND*	00000000              exit@@GLIBC_2.0
0804d084 g     O .data	00000000              .hidden __dso_handle
08049082 g     F .text	00000051              fun9
0804a1e4 g     O .rodata	00000004              _IO_stdin_used
0804d0b8 g     O .data	0000000c              n22
0804d5c0 g     O .data	00000200              host_table
0804d0a0 g     O .data	0000000c              n1
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*	00000000              write@@GLIBC_2.0
08049191 g     F .text	0000001f              string_length
00000000       F *UND*	00000000              strcasecmp@@GLIBC_2.0
0804a160 g     F .text	0000005d              __libc_csu_init
0804d7e0 g     O .bss	00000004              stdin@@GLIBC_2.0
00000000       F *UND*	00000000              __isoc99_sscanf@@GLIBC_2.7
0804d0e8 g     O .data	0000000c              n34
00000000       F *UND*	00000000              fopen@@GLIBC_2.1
08048e3c g     F .text	0000005e              func6
0804d0d0 g     O .data	0000000c              n32
0804de90 g       .bss	00000000              _end
00000000       F *UND*	00000000              __errno_location@@GLIBC_2.0
08048980 g     F .text	00000000              _start
0804a1e0 g     O .rodata	00000004              _fp_hw
0804d7f0 g     O .bss	00000004              infile
08049611 g     F .text	00000023              sigalrm_handler
08049ed2 g     F .text	00000035              init_timeout
0804d7e4 g     O .bss	00000004              stdout@@GLIBC_2.0
0804d7c0 g       .bss	00000000              __bss_start
0804d1a0 g     O .data	00000400              userid
08048a7b g     F .text	000001b2              main
00000000       F *UND*	00000000              __printf_chk@@GLIBC_2.3.4
0804d13c g     O .data	0000000c              n47
0804d10c g     O .data	0000000c              n43
0804d0f4 g     O .data	0000000c              n41
080494e2 g     F .text	000000f9              read_line
0804d124 g     O .data	0000000c              n45
080491b0 g     F .text	00000065              strings_not_equal
08048d28 g     F .text	0000006b              phase_4
08048f9c g     F .text	000000e6              phase_8
08048e9a g     F .text	00000075              phase_6
0804de40 g     O .bss	00000050              scratch
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a0d9 g     F .text	0000007c              driver_post
08049382 g     F .text	000000e8              send_msg
08048c89 g     F .text	00000021              phase_2
0804d5a0 g     O .data	00000004              bomb_id
00000000       F *UND*	00000000              socket@@GLIBC_2.0
0804d7c0 g     O .data	00000000              .hidden __TMC_END__
00000000       F *UND*	00000000              __fprintf_chk@@GLIBC_2.3.4
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804d160 g     O .data	0000000c              node2
0804d178 g     O .data	0000000c              node4
00000000       F *UND*	00000000              gethostbyname@@GLIBC_2.0
00000000       F *UND*	00000000              strtol@@GLIBC_2.0
0804d190 g     O .data	0000000c              node6
00000000       F *UND*	00000000              connect@@GLIBC_2.0
08048760 g     F .init	00000000              _init
00000000       F *UND*	00000000              close@@GLIBC_2.0
080494a7 g     F .text	0000003b              read_six_numbers
0804d0ac g     O .data	0000000c              n21
08049215 g     F .text	000000ee              initialize_bomb
00000000       F *UND*	00000000              __ctype_b_loc@@GLIBC_2.3
00000000       F *UND*	00000000              __sprintf_chk@@GLIBC_2.3.4



Disassembly of section .init:

08048760 <_init>:
 8048760:	53                   	push   %ebx
 8048761:	83 ec 08             	sub    $0x8,%esp
 8048764:	e8 47 02 00 00       	call   80489b0 <__x86.get_pc_thunk.bx>
 8048769:	81 c3 97 48 00 00    	add    $0x4897,%ebx
 804876f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048775:	85 c0                	test   %eax,%eax
 8048777:	74 05                	je     804877e <_init+0x1e>
 8048779:	e8 f2 01 00 00       	call   8048970 <.plt.got>
 804877e:	83 c4 08             	add    $0x8,%esp
 8048781:	5b                   	pop    %ebx
 8048782:	c3                   	ret    

Disassembly of section .plt:

08048790 <.plt>:
 8048790:	ff 35 04 d0 04 08    	pushl  0x804d004
 8048796:	ff 25 08 d0 04 08    	jmp    *0x804d008
 804879c:	00 00                	add    %al,(%eax)
	...

080487a0 <read@plt>:
 80487a0:	ff 25 0c d0 04 08    	jmp    *0x804d00c
 80487a6:	68 00 00 00 00       	push   $0x0
 80487ab:	e9 e0 ff ff ff       	jmp    8048790 <.plt>

080487b0 <fflush@plt>:
 80487b0:	ff 25 10 d0 04 08    	jmp    *0x804d010
 80487b6:	68 08 00 00 00       	push   $0x8
 80487bb:	e9 d0 ff ff ff       	jmp    8048790 <.plt>

080487c0 <fgets@plt>:
 80487c0:	ff 25 14 d0 04 08    	jmp    *0x804d014
 80487c6:	68 10 00 00 00       	push   $0x10
 80487cb:	e9 c0 ff ff ff       	jmp    8048790 <.plt>

080487d0 <signal@plt>:
 80487d0:	ff 25 18 d0 04 08    	jmp    *0x804d018
 80487d6:	68 18 00 00 00       	push   $0x18
 80487db:	e9 b0 ff ff ff       	jmp    8048790 <.plt>

080487e0 <sleep@plt>:
 80487e0:	ff 25 1c d0 04 08    	jmp    *0x804d01c
 80487e6:	68 20 00 00 00       	push   $0x20
 80487eb:	e9 a0 ff ff ff       	jmp    8048790 <.plt>

080487f0 <alarm@plt>:
 80487f0:	ff 25 20 d0 04 08    	jmp    *0x804d020
 80487f6:	68 28 00 00 00       	push   $0x28
 80487fb:	e9 90 ff ff ff       	jmp    8048790 <.plt>

08048800 <__stack_chk_fail@plt>:
 8048800:	ff 25 24 d0 04 08    	jmp    *0x804d024
 8048806:	68 30 00 00 00       	push   $0x30
 804880b:	e9 80 ff ff ff       	jmp    8048790 <.plt>

08048810 <strcpy@plt>:
 8048810:	ff 25 28 d0 04 08    	jmp    *0x804d028
 8048816:	68 38 00 00 00       	push   $0x38
 804881b:	e9 70 ff ff ff       	jmp    8048790 <.plt>

08048820 <gethostname@plt>:
 8048820:	ff 25 2c d0 04 08    	jmp    *0x804d02c
 8048826:	68 40 00 00 00       	push   $0x40
 804882b:	e9 60 ff ff ff       	jmp    8048790 <.plt>

08048830 <getenv@plt>:
 8048830:	ff 25 30 d0 04 08    	jmp    *0x804d030
 8048836:	68 48 00 00 00       	push   $0x48
 804883b:	e9 50 ff ff ff       	jmp    8048790 <.plt>

08048840 <malloc@plt>:
 8048840:	ff 25 34 d0 04 08    	jmp    *0x804d034
 8048846:	68 50 00 00 00       	push   $0x50
 804884b:	e9 40 ff ff ff       	jmp    8048790 <.plt>

08048850 <puts@plt>:
 8048850:	ff 25 38 d0 04 08    	jmp    *0x804d038
 8048856:	68 58 00 00 00       	push   $0x58
 804885b:	e9 30 ff ff ff       	jmp    8048790 <.plt>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 3c d0 04 08    	jmp    *0x804d03c
 8048866:	68 60 00 00 00       	push   $0x60
 804886b:	e9 20 ff ff ff       	jmp    8048790 <.plt>

08048870 <exit@plt>:
 8048870:	ff 25 40 d0 04 08    	jmp    *0x804d040
 8048876:	68 68 00 00 00       	push   $0x68
 804887b:	e9 10 ff ff ff       	jmp    8048790 <.plt>

08048880 <__libc_start_main@plt>:
 8048880:	ff 25 44 d0 04 08    	jmp    *0x804d044
 8048886:	68 70 00 00 00       	push   $0x70
 804888b:	e9 00 ff ff ff       	jmp    8048790 <.plt>

08048890 <write@plt>:
 8048890:	ff 25 48 d0 04 08    	jmp    *0x804d048
 8048896:	68 78 00 00 00       	push   $0x78
 804889b:	e9 f0 fe ff ff       	jmp    8048790 <.plt>

080488a0 <strcasecmp@plt>:
 80488a0:	ff 25 4c d0 04 08    	jmp    *0x804d04c
 80488a6:	68 80 00 00 00       	push   $0x80
 80488ab:	e9 e0 fe ff ff       	jmp    8048790 <.plt>

080488b0 <__isoc99_sscanf@plt>:
 80488b0:	ff 25 50 d0 04 08    	jmp    *0x804d050
 80488b6:	68 88 00 00 00       	push   $0x88
 80488bb:	e9 d0 fe ff ff       	jmp    8048790 <.plt>

080488c0 <fopen@plt>:
 80488c0:	ff 25 54 d0 04 08    	jmp    *0x804d054
 80488c6:	68 90 00 00 00       	push   $0x90
 80488cb:	e9 c0 fe ff ff       	jmp    8048790 <.plt>

080488d0 <__errno_location@plt>:
 80488d0:	ff 25 58 d0 04 08    	jmp    *0x804d058
 80488d6:	68 98 00 00 00       	push   $0x98
 80488db:	e9 b0 fe ff ff       	jmp    8048790 <.plt>

080488e0 <__printf_chk@plt>:
 80488e0:	ff 25 5c d0 04 08    	jmp    *0x804d05c
 80488e6:	68 a0 00 00 00       	push   $0xa0
 80488eb:	e9 a0 fe ff ff       	jmp    8048790 <.plt>

080488f0 <socket@plt>:
 80488f0:	ff 25 60 d0 04 08    	jmp    *0x804d060
 80488f6:	68 a8 00 00 00       	push   $0xa8
 80488fb:	e9 90 fe ff ff       	jmp    8048790 <.plt>

08048900 <__fprintf_chk@plt>:
 8048900:	ff 25 64 d0 04 08    	jmp    *0x804d064
 8048906:	68 b0 00 00 00       	push   $0xb0
 804890b:	e9 80 fe ff ff       	jmp    8048790 <.plt>

08048910 <gethostbyname@plt>:
 8048910:	ff 25 68 d0 04 08    	jmp    *0x804d068
 8048916:	68 b8 00 00 00       	push   $0xb8
 804891b:	e9 70 fe ff ff       	jmp    8048790 <.plt>

08048920 <strtol@plt>:
 8048920:	ff 25 6c d0 04 08    	jmp    *0x804d06c
 8048926:	68 c0 00 00 00       	push   $0xc0
 804892b:	e9 60 fe ff ff       	jmp    8048790 <.plt>

08048930 <connect@plt>:
 8048930:	ff 25 70 d0 04 08    	jmp    *0x804d070
 8048936:	68 c8 00 00 00       	push   $0xc8
 804893b:	e9 50 fe ff ff       	jmp    8048790 <.plt>

08048940 <close@plt>:
 8048940:	ff 25 74 d0 04 08    	jmp    *0x804d074
 8048946:	68 d0 00 00 00       	push   $0xd0
 804894b:	e9 40 fe ff ff       	jmp    8048790 <.plt>

08048950 <__ctype_b_loc@plt>:
 8048950:	ff 25 78 d0 04 08    	jmp    *0x804d078
 8048956:	68 d8 00 00 00       	push   $0xd8
 804895b:	e9 30 fe ff ff       	jmp    8048790 <.plt>

08048960 <__sprintf_chk@plt>:
 8048960:	ff 25 7c d0 04 08    	jmp    *0x804d07c
 8048966:	68 e0 00 00 00       	push   $0xe0
 804896b:	e9 20 fe ff ff       	jmp    8048790 <.plt>

Disassembly of section .plt.got:

08048970 <.plt.got>:
 8048970:	ff 25 fc cf 04 08    	jmp    *0x804cffc
 8048976:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048980 <_start>:
 8048980:	31 ed                	xor    %ebp,%ebp
 8048982:	5e                   	pop    %esi
 8048983:	89 e1                	mov    %esp,%ecx
 8048985:	83 e4 f0             	and    $0xfffffff0,%esp
 8048988:	50                   	push   %eax
 8048989:	54                   	push   %esp
 804898a:	52                   	push   %edx
 804898b:	68 c0 a1 04 08       	push   $0x804a1c0
 8048990:	68 60 a1 04 08       	push   $0x804a160
 8048995:	51                   	push   %ecx
 8048996:	56                   	push   %esi
 8048997:	68 7b 8a 04 08       	push   $0x8048a7b
 804899c:	e8 df fe ff ff       	call   8048880 <__libc_start_main@plt>
 80489a1:	f4                   	hlt    
 80489a2:	66 90                	xchg   %ax,%ax
 80489a4:	66 90                	xchg   %ax,%ax
 80489a6:	66 90                	xchg   %ax,%ax
 80489a8:	66 90                	xchg   %ax,%ax
 80489aa:	66 90                	xchg   %ax,%ax
 80489ac:	66 90                	xchg   %ax,%ax
 80489ae:	66 90                	xchg   %ax,%ax

080489b0 <__x86.get_pc_thunk.bx>:
 80489b0:	8b 1c 24             	mov    (%esp),%ebx
 80489b3:	c3                   	ret    
 80489b4:	66 90                	xchg   %ax,%ax
 80489b6:	66 90                	xchg   %ax,%ax
 80489b8:	66 90                	xchg   %ax,%ax
 80489ba:	66 90                	xchg   %ax,%ax
 80489bc:	66 90                	xchg   %ax,%ax
 80489be:	66 90                	xchg   %ax,%ax

080489c0 <deregister_tm_clones>:
 80489c0:	b8 c3 d7 04 08       	mov    $0x804d7c3,%eax
 80489c5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489ca:	83 f8 06             	cmp    $0x6,%eax
 80489cd:	76 1a                	jbe    80489e9 <deregister_tm_clones+0x29>
 80489cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80489d4:	85 c0                	test   %eax,%eax
 80489d6:	74 11                	je     80489e9 <deregister_tm_clones+0x29>
 80489d8:	55                   	push   %ebp
 80489d9:	89 e5                	mov    %esp,%ebp
 80489db:	83 ec 14             	sub    $0x14,%esp
 80489de:	68 c0 d7 04 08       	push   $0x804d7c0
 80489e3:	ff d0                	call   *%eax
 80489e5:	83 c4 10             	add    $0x10,%esp
 80489e8:	c9                   	leave  
 80489e9:	f3 c3                	repz ret 
 80489eb:	90                   	nop
 80489ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080489f0 <register_tm_clones>:
 80489f0:	b8 c0 d7 04 08       	mov    $0x804d7c0,%eax
 80489f5:	2d c0 d7 04 08       	sub    $0x804d7c0,%eax
 80489fa:	c1 f8 02             	sar    $0x2,%eax
 80489fd:	89 c2                	mov    %eax,%edx
 80489ff:	c1 ea 1f             	shr    $0x1f,%edx
 8048a02:	01 d0                	add    %edx,%eax
 8048a04:	d1 f8                	sar    %eax
 8048a06:	74 1b                	je     8048a23 <register_tm_clones+0x33>
 8048a08:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a0d:	85 d2                	test   %edx,%edx
 8048a0f:	74 12                	je     8048a23 <register_tm_clones+0x33>
 8048a11:	55                   	push   %ebp
 8048a12:	89 e5                	mov    %esp,%ebp
 8048a14:	83 ec 10             	sub    $0x10,%esp
 8048a17:	50                   	push   %eax
 8048a18:	68 c0 d7 04 08       	push   $0x804d7c0
 8048a1d:	ff d2                	call   *%edx
 8048a1f:	83 c4 10             	add    $0x10,%esp
 8048a22:	c9                   	leave  
 8048a23:	f3 c3                	repz ret 
 8048a25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a30 <__do_global_dtors_aux>:
 8048a30:	80 3d e8 d7 04 08 00 	cmpb   $0x0,0x804d7e8
 8048a37:	75 13                	jne    8048a4c <__do_global_dtors_aux+0x1c>
 8048a39:	55                   	push   %ebp
 8048a3a:	89 e5                	mov    %esp,%ebp
 8048a3c:	83 ec 08             	sub    $0x8,%esp
 8048a3f:	e8 7c ff ff ff       	call   80489c0 <deregister_tm_clones>
 8048a44:	c6 05 e8 d7 04 08 01 	movb   $0x1,0x804d7e8
 8048a4b:	c9                   	leave  
 8048a4c:	f3 c3                	repz ret 
 8048a4e:	66 90                	xchg   %ax,%ax

08048a50 <frame_dummy>:
 8048a50:	b8 10 cf 04 08       	mov    $0x804cf10,%eax
 8048a55:	8b 10                	mov    (%eax),%edx
 8048a57:	85 d2                	test   %edx,%edx
 8048a59:	75 05                	jne    8048a60 <frame_dummy+0x10>
 8048a5b:	eb 93                	jmp    80489f0 <register_tm_clones>
 8048a5d:	8d 76 00             	lea    0x0(%esi),%esi
 8048a60:	ba 00 00 00 00       	mov    $0x0,%edx
 8048a65:	85 d2                	test   %edx,%edx
 8048a67:	74 f2                	je     8048a5b <frame_dummy+0xb>
 8048a69:	55                   	push   %ebp
 8048a6a:	89 e5                	mov    %esp,%ebp
 8048a6c:	83 ec 14             	sub    $0x14,%esp
 8048a6f:	50                   	push   %eax
 8048a70:	ff d2                	call   *%edx
 8048a72:	83 c4 10             	add    $0x10,%esp
 8048a75:	c9                   	leave  
 8048a76:	e9 75 ff ff ff       	jmp    80489f0 <register_tm_clones>

08048a7b <main>:
 8048a7b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048a7f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a82:	ff 71 fc             	pushl  -0x4(%ecx)
 8048a85:	55                   	push   %ebp
 8048a86:	89 e5                	mov    %esp,%ebp
 8048a88:	53                   	push   %ebx
 8048a89:	51                   	push   %ecx
 8048a8a:	8b 01                	mov    (%ecx),%eax
 8048a8c:	8b 59 04             	mov    0x4(%ecx),%ebx
 8048a8f:	83 f8 01             	cmp    $0x1,%eax
 8048a92:	75 0c                	jne    8048aa0 <main+0x25>
 8048a94:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8048a99:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048a9e:	eb 5b                	jmp    8048afb <main+0x80>
 8048aa0:	83 f8 02             	cmp    $0x2,%eax
 8048aa3:	75 39                	jne    8048ade <main+0x63>
 8048aa5:	83 ec 08             	sub    $0x8,%esp
 8048aa8:	68 e8 a1 04 08       	push   $0x804a1e8
 8048aad:	ff 73 04             	pushl  0x4(%ebx)
 8048ab0:	e8 0b fe ff ff       	call   80488c0 <fopen@plt>
 8048ab5:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 8048aba:	83 c4 10             	add    $0x10,%esp
 8048abd:	85 c0                	test   %eax,%eax
 8048abf:	75 3a                	jne    8048afb <main+0x80>
 8048ac1:	ff 73 04             	pushl  0x4(%ebx)
 8048ac4:	ff 33                	pushl  (%ebx)
 8048ac6:	68 ea a1 04 08       	push   $0x804a1ea
 8048acb:	6a 01                	push   $0x1
 8048acd:	e8 0e fe ff ff       	call   80488e0 <__printf_chk@plt>
 8048ad2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad9:	e8 92 fd ff ff       	call   8048870 <exit@plt>
 8048ade:	83 ec 04             	sub    $0x4,%esp
 8048ae1:	ff 33                	pushl  (%ebx)
 8048ae3:	68 07 a2 04 08       	push   $0x804a207
 8048ae8:	6a 01                	push   $0x1
 8048aea:	e8 f1 fd ff ff       	call   80488e0 <__printf_chk@plt>
 8048aef:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048af6:	e8 75 fd ff ff       	call   8048870 <exit@plt>
 8048afb:	e8 15 07 00 00       	call   8049215 <initialize_bomb>
 8048b00:	83 ec 0c             	sub    $0xc,%esp
 8048b03:	68 78 a2 04 08       	push   $0x804a278
 8048b08:	e8 43 fd ff ff       	call   8048850 <puts@plt>
 8048b0d:	c7 04 24 b4 a2 04 08 	movl   $0x804a2b4,(%esp)
 8048b14:	e8 37 fd ff ff       	call   8048850 <puts@plt>
 8048b19:	e8 c4 09 00 00       	call   80494e2 <read_line>
 8048b1e:	89 04 24             	mov    %eax,(%esp)
 8048b21:	e8 07 01 00 00       	call   8048c2d <phase_1>
 8048b26:	e8 b0 0a 00 00       	call   80495db <phase_defused>
 8048b2b:	c7 04 24 e0 a2 04 08 	movl   $0x804a2e0,(%esp)
 8048b32:	e8 19 fd ff ff       	call   8048850 <puts@plt>
 8048b37:	e8 a6 09 00 00       	call   80494e2 <read_line>
 8048b3c:	89 04 24             	mov    %eax,(%esp)
 8048b3f:	e8 45 01 00 00       	call   8048c89 <phase_2>
 8048b44:	e8 92 0a 00 00       	call   80495db <phase_defused>
 8048b49:	c7 04 24 21 a2 04 08 	movl   $0x804a221,(%esp)
 8048b50:	e8 fb fc ff ff       	call   8048850 <puts@plt>
 8048b55:	e8 88 09 00 00       	call   80494e2 <read_line>
 8048b5a:	89 04 24             	mov    %eax,(%esp)
 8048b5d:	e8 48 01 00 00       	call   8048caa <phase_3>
 8048b62:	e8 74 0a 00 00       	call   80495db <phase_defused>
 8048b67:	c7 04 24 3f a2 04 08 	movl   $0x804a23f,(%esp)
 8048b6e:	e8 dd fc ff ff       	call   8048850 <puts@plt>
 8048b73:	e8 6a 09 00 00       	call   80494e2 <read_line>
 8048b78:	89 04 24             	mov    %eax,(%esp)
 8048b7b:	e8 a8 01 00 00       	call   8048d28 <phase_4>
 8048b80:	e8 56 0a 00 00       	call   80495db <phase_defused>
 8048b85:	c7 04 24 0c a3 04 08 	movl   $0x804a30c,(%esp)
 8048b8c:	e8 bf fc ff ff       	call   8048850 <puts@plt>
 8048b91:	e8 4c 09 00 00       	call   80494e2 <read_line>
 8048b96:	89 04 24             	mov    %eax,(%esp)
 8048b99:	e8 f5 01 00 00       	call   8048d93 <phase_5>
 8048b9e:	e8 38 0a 00 00       	call   80495db <phase_defused>
 8048ba3:	c7 04 24 50 a2 04 08 	movl   $0x804a250,(%esp)
 8048baa:	e8 a1 fc ff ff       	call   8048850 <puts@plt>
 8048baf:	e8 2e 09 00 00       	call   80494e2 <read_line>
 8048bb4:	89 04 24             	mov    %eax,(%esp)
 8048bb7:	e8 de 02 00 00       	call   8048e9a <phase_6>
 8048bbc:	e8 1a 0a 00 00       	call   80495db <phase_defused>
 8048bc1:	c7 04 24 30 a3 04 08 	movl   $0x804a330,(%esp)
 8048bc8:	e8 83 fc ff ff       	call   8048850 <puts@plt>
 8048bcd:	e8 10 09 00 00       	call   80494e2 <read_line>
 8048bd2:	89 04 24             	mov    %eax,(%esp)
 8048bd5:	e8 35 03 00 00       	call   8048f0f <phase_7>
 8048bda:	e8 fc 09 00 00       	call   80495db <phase_defused>
 8048bdf:	c7 04 24 50 a3 04 08 	movl   $0x804a350,(%esp)
 8048be6:	e8 65 fc ff ff       	call   8048850 <puts@plt>
 8048beb:	e8 f2 08 00 00       	call   80494e2 <read_line>
 8048bf0:	89 04 24             	mov    %eax,(%esp)
 8048bf3:	e8 a4 03 00 00       	call   8048f9c <phase_8>
 8048bf8:	e8 de 09 00 00       	call   80495db <phase_defused>
 8048bfd:	c7 04 24 6e a2 04 08 	movl   $0x804a26e,(%esp)
 8048c04:	e8 47 fc ff ff       	call   8048850 <puts@plt>
 8048c09:	e8 d4 08 00 00       	call   80494e2 <read_line>
 8048c0e:	89 04 24             	mov    %eax,(%esp)
 8048c11:	e8 bd 04 00 00       	call   80490d3 <phase_9>
 8048c16:	e8 c0 09 00 00       	call   80495db <phase_defused>
 8048c1b:	83 c4 10             	add    $0x10,%esp
 8048c1e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c23:	8d 65 f8             	lea    -0x8(%ebp),%esp
 8048c26:	59                   	pop    %ecx
 8048c27:	5b                   	pop    %ebx
 8048c28:	5d                   	pop    %ebp
 8048c29:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048c2c:	c3                   	ret    

08048c2d <phase_1>:
 8048c2d:	83 ec 20             	sub    $0x20,%esp
 8048c30:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048c36:	89 44 24 10          	mov    %eax,0x10(%esp)
 8048c3a:	31 c0                	xor    %eax,%eax
 8048c3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048c43:	00 
 8048c44:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048c48:	50                   	push   %eax
 8048c49:	68 24 a6 04 08       	push   $0x804a624
 8048c4e:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048c52:	e8 59 fc ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048c57:	83 c4 10             	add    $0x10,%esp
 8048c5a:	83 f8 01             	cmp    $0x1,%eax
 8048c5d:	74 05                	je     8048c64 <phase_1+0x37>
 8048c5f:	e8 06 08 00 00       	call   804946a <explode_bomb>
 8048c64:	81 7c 24 08 a9 02 00 	cmpl   $0x2a9,0x8(%esp)
 8048c6b:	00 
 8048c6c:	74 05                	je     8048c73 <phase_1+0x46>
 8048c6e:	e8 f7 07 00 00       	call   804946a <explode_bomb>
 8048c73:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048c77:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048c7e:	74 05                	je     8048c85 <phase_1+0x58>
 8048c80:	e8 7b fb ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048c85:	83 c4 1c             	add    $0x1c,%esp
 8048c88:	c3                   	ret    

08048c89 <phase_2>:
 8048c89:	83 ec 14             	sub    $0x14,%esp
 8048c8c:	68 70 a3 04 08       	push   $0x804a370
 8048c91:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048c95:	e8 16 05 00 00       	call   80491b0 <strings_not_equal>
 8048c9a:	83 c4 10             	add    $0x10,%esp
 8048c9d:	85 c0                	test   %eax,%eax
 8048c9f:	74 05                	je     8048ca6 <phase_2+0x1d>
 8048ca1:	e8 c4 07 00 00       	call   804946a <explode_bomb>
 8048ca6:	83 c4 0c             	add    $0xc,%esp
 8048ca9:	c3                   	ret    

08048caa <phase_3>:
 8048caa:	83 ec 18             	sub    $0x18,%esp
 8048cad:	68 9c a3 04 08       	push   $0x804a39c
 8048cb2:	e8 da 04 00 00       	call   8049191 <string_length>
 8048cb7:	83 c0 01             	add    $0x1,%eax
 8048cba:	89 04 24             	mov    %eax,(%esp)
 8048cbd:	e8 7e fb ff ff       	call   8048840 <malloc@plt>
 8048cc2:	c7 00 59 6f 75 20    	movl   $0x20756f59,(%eax)
 8048cc8:	c7 40 04 63 61 6e 20 	movl   $0x206e6163,0x4(%eax)
 8048ccf:	c7 40 08 52 75 73 73 	movl   $0x73737552,0x8(%eax)
 8048cd6:	c7 40 0c 69 61 20 66 	movl   $0x66206169,0xc(%eax)
 8048cdd:	c7 40 10 72 6f 6d 20 	movl   $0x206d6f72,0x10(%eax)
 8048ce4:	c7 40 14 6c 61 6e 64 	movl   $0x646e616c,0x14(%eax)
 8048ceb:	c7 40 18 20 68 65 72 	movl   $0x72656820,0x18(%eax)
 8048cf2:	c7 40 1c 65 20 69 6e 	movl   $0x6e692065,0x1c(%eax)
 8048cf9:	c7 40 20 20 41 6c 61 	movl   $0x616c4120,0x20(%eax)
 8048d00:	c7 40 24 73 6b 61 2e 	movl   $0x2e616b73,0x24(%eax)
 8048d07:	c6 40 28 00          	movb   $0x0,0x28(%eax)
 8048d0b:	83 c4 08             	add    $0x8,%esp
 8048d0e:	50                   	push   %eax
 8048d0f:	ff 74 24 1c          	pushl  0x1c(%esp)
 8048d13:	e8 98 04 00 00       	call   80491b0 <strings_not_equal>
 8048d18:	83 c4 10             	add    $0x10,%esp
 8048d1b:	85 c0                	test   %eax,%eax
 8048d1d:	74 05                	je     8048d24 <phase_3+0x7a>
 8048d1f:	e8 46 07 00 00       	call   804946a <explode_bomb>
 8048d24:	83 c4 0c             	add    $0xc,%esp
 8048d27:	c3                   	ret    

08048d28 <phase_4>:
 8048d28:	56                   	push   %esi
 8048d29:	53                   	push   %ebx
 8048d2a:	83 ec 2c             	sub    $0x2c,%esp
 8048d2d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d33:	89 44 24 24          	mov    %eax,0x24(%esp)
 8048d37:	31 c0                	xor    %eax,%eax
 8048d39:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048d3d:	50                   	push   %eax
 8048d3e:	ff 74 24 3c          	pushl  0x3c(%esp)
 8048d42:	e8 60 07 00 00       	call   80494a7 <read_six_numbers>
 8048d47:	83 c4 10             	add    $0x10,%esp
 8048d4a:	83 7c 24 04 01       	cmpl   $0x1,0x4(%esp)
 8048d4f:	75 07                	jne    8048d58 <phase_4+0x30>
 8048d51:	83 7c 24 08 04       	cmpl   $0x4,0x8(%esp)
 8048d56:	74 05                	je     8048d5d <phase_4+0x35>
 8048d58:	e8 0d 07 00 00       	call   804946a <explode_bomb>
 8048d5d:	8d 5c 24 04          	lea    0x4(%esp),%ebx
 8048d61:	8d 74 24 14          	lea    0x14(%esp),%esi
 8048d65:	8b 43 04             	mov    0x4(%ebx),%eax
 8048d68:	03 03                	add    (%ebx),%eax
 8048d6a:	39 43 08             	cmp    %eax,0x8(%ebx)
 8048d6d:	74 05                	je     8048d74 <phase_4+0x4c>
 8048d6f:	e8 f6 06 00 00       	call   804946a <explode_bomb>
 8048d74:	83 c3 04             	add    $0x4,%ebx
 8048d77:	39 f3                	cmp    %esi,%ebx
 8048d79:	75 ea                	jne    8048d65 <phase_4+0x3d>
 8048d7b:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048d7f:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048d86:	74 05                	je     8048d8d <phase_4+0x65>
 8048d88:	e8 73 fa ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048d8d:	83 c4 24             	add    $0x24,%esp
 8048d90:	5b                   	pop    %ebx
 8048d91:	5e                   	pop    %esi
 8048d92:	c3                   	ret    

08048d93 <phase_5>:
 8048d93:	83 ec 1c             	sub    $0x1c,%esp
 8048d96:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048d9c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048da0:	31 c0                	xor    %eax,%eax
 8048da2:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048da6:	50                   	push   %eax
 8048da7:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048dab:	50                   	push   %eax
 8048dac:	68 21 a6 04 08       	push   $0x804a621
 8048db1:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048db5:	e8 f6 fa ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048dba:	83 c4 10             	add    $0x10,%esp
 8048dbd:	83 f8 01             	cmp    $0x1,%eax
 8048dc0:	7f 05                	jg     8048dc7 <phase_5+0x34>
 8048dc2:	e8 a3 06 00 00       	call   804946a <explode_bomb>
 8048dc7:	83 7c 24 04 07       	cmpl   $0x7,0x4(%esp)
 8048dcc:	77 3c                	ja     8048e0a <phase_5+0x77>
 8048dce:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048dd2:	ff 24 85 e0 a3 04 08 	jmp    *0x804a3e0(,%eax,4)
 8048dd9:	b8 69 03 00 00       	mov    $0x369,%eax
 8048dde:	eb 3b                	jmp    8048e1b <phase_5+0x88>
 8048de0:	b8 e2 03 00 00       	mov    $0x3e2,%eax
 8048de5:	eb 34                	jmp    8048e1b <phase_5+0x88>
 8048de7:	b8 22 03 00 00       	mov    $0x322,%eax
 8048dec:	eb 2d                	jmp    8048e1b <phase_5+0x88>
 8048dee:	b8 ec 01 00 00       	mov    $0x1ec,%eax
 8048df3:	eb 26                	jmp    8048e1b <phase_5+0x88>
 8048df5:	b8 3e 01 00 00       	mov    $0x13e,%eax
 8048dfa:	eb 1f                	jmp    8048e1b <phase_5+0x88>
 8048dfc:	b8 13 01 00 00       	mov    $0x113,%eax
 8048e01:	eb 18                	jmp    8048e1b <phase_5+0x88>
 8048e03:	b8 7b 01 00 00       	mov    $0x17b,%eax
 8048e08:	eb 11                	jmp    8048e1b <phase_5+0x88>
 8048e0a:	e8 5b 06 00 00       	call   804946a <explode_bomb>
 8048e0f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e14:	eb 05                	jmp    8048e1b <phase_5+0x88>
 8048e16:	b8 92 01 00 00       	mov    $0x192,%eax
 8048e1b:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8048e1f:	74 05                	je     8048e26 <phase_5+0x93>
 8048e21:	e8 44 06 00 00       	call   804946a <explode_bomb>
 8048e26:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048e2a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e31:	74 05                	je     8048e38 <phase_5+0xa5>
 8048e33:	e8 c8 f9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048e38:	83 c4 1c             	add    $0x1c,%esp
 8048e3b:	c3                   	ret    

08048e3c <func6>:
 8048e3c:	56                   	push   %esi
 8048e3d:	53                   	push   %ebx
 8048e3e:	83 ec 04             	sub    $0x4,%esp
 8048e41:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 8048e45:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 8048e49:	8b 74 24 18          	mov    0x18(%esp),%esi
 8048e4d:	89 f0                	mov    %esi,%eax
 8048e4f:	29 d8                	sub    %ebx,%eax
 8048e51:	89 c2                	mov    %eax,%edx
 8048e53:	c1 ea 1f             	shr    $0x1f,%edx
 8048e56:	01 d0                	add    %edx,%eax
 8048e58:	d1 f8                	sar    %eax
 8048e5a:	8d 14 18             	lea    (%eax,%ebx,1),%edx
 8048e5d:	39 ca                	cmp    %ecx,%edx
 8048e5f:	7e 15                	jle    8048e76 <func6+0x3a>
 8048e61:	83 ec 04             	sub    $0x4,%esp
 8048e64:	83 ea 01             	sub    $0x1,%edx
 8048e67:	52                   	push   %edx
 8048e68:	53                   	push   %ebx
 8048e69:	51                   	push   %ecx
 8048e6a:	e8 cd ff ff ff       	call   8048e3c <func6>
 8048e6f:	83 c4 10             	add    $0x10,%esp
 8048e72:	01 c0                	add    %eax,%eax
 8048e74:	eb 1e                	jmp    8048e94 <func6+0x58>
 8048e76:	b8 00 00 00 00       	mov    $0x0,%eax
 8048e7b:	39 ca                	cmp    %ecx,%edx
 8048e7d:	7d 15                	jge    8048e94 <func6+0x58>
 8048e7f:	83 ec 04             	sub    $0x4,%esp
 8048e82:	56                   	push   %esi
 8048e83:	83 c2 01             	add    $0x1,%edx
 8048e86:	52                   	push   %edx
 8048e87:	51                   	push   %ecx
 8048e88:	e8 af ff ff ff       	call   8048e3c <func6>
 8048e8d:	83 c4 10             	add    $0x10,%esp
 8048e90:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048e94:	83 c4 04             	add    $0x4,%esp
 8048e97:	5b                   	pop    %ebx
 8048e98:	5e                   	pop    %esi
 8048e99:	c3                   	ret    

08048e9a <phase_6>:
 8048e9a:	83 ec 1c             	sub    $0x1c,%esp
 8048e9d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048ea3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048ea7:	31 c0                	xor    %eax,%eax
 8048ea9:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048ead:	50                   	push   %eax
 8048eae:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048eb2:	50                   	push   %eax
 8048eb3:	68 21 a6 04 08       	push   $0x804a621
 8048eb8:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048ebc:	e8 ef f9 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048ec1:	83 c4 10             	add    $0x10,%esp
 8048ec4:	83 f8 02             	cmp    $0x2,%eax
 8048ec7:	75 07                	jne    8048ed0 <phase_6+0x36>
 8048ec9:	83 7c 24 04 0e       	cmpl   $0xe,0x4(%esp)
 8048ece:	76 05                	jbe    8048ed5 <phase_6+0x3b>
 8048ed0:	e8 95 05 00 00       	call   804946a <explode_bomb>
 8048ed5:	83 ec 04             	sub    $0x4,%esp
 8048ed8:	6a 0e                	push   $0xe
 8048eda:	6a 00                	push   $0x0
 8048edc:	ff 74 24 10          	pushl  0x10(%esp)
 8048ee0:	e8 57 ff ff ff       	call   8048e3c <func6>
 8048ee5:	83 c4 10             	add    $0x10,%esp
 8048ee8:	83 f8 03             	cmp    $0x3,%eax
 8048eeb:	75 07                	jne    8048ef4 <phase_6+0x5a>
 8048eed:	83 7c 24 08 03       	cmpl   $0x3,0x8(%esp)
 8048ef2:	74 05                	je     8048ef9 <phase_6+0x5f>
 8048ef4:	e8 71 05 00 00       	call   804946a <explode_bomb>
 8048ef9:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048efd:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048f04:	74 05                	je     8048f0b <phase_6+0x71>
 8048f06:	e8 f5 f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048f0b:	83 c4 1c             	add    $0x1c,%esp
 8048f0e:	c3                   	ret    

08048f0f <phase_7>:
 8048f0f:	83 ec 1c             	sub    $0x1c,%esp
 8048f12:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048f18:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048f1c:	31 c0                	xor    %eax,%eax
 8048f1e:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048f22:	50                   	push   %eax
 8048f23:	8d 44 24 08          	lea    0x8(%esp),%eax
 8048f27:	50                   	push   %eax
 8048f28:	68 21 a6 04 08       	push   $0x804a621
 8048f2d:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048f31:	e8 7a f9 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8048f36:	83 c4 10             	add    $0x10,%esp
 8048f39:	83 f8 01             	cmp    $0x1,%eax
 8048f3c:	7f 05                	jg     8048f43 <phase_7+0x34>
 8048f3e:	e8 27 05 00 00       	call   804946a <explode_bomb>
 8048f43:	8b 44 24 04          	mov    0x4(%esp),%eax
 8048f47:	83 e0 0f             	and    $0xf,%eax
 8048f4a:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048f4e:	83 f8 0f             	cmp    $0xf,%eax
 8048f51:	74 2e                	je     8048f81 <phase_7+0x72>
 8048f53:	b9 00 00 00 00       	mov    $0x0,%ecx
 8048f58:	ba 00 00 00 00       	mov    $0x0,%edx
 8048f5d:	83 c2 01             	add    $0x1,%edx
 8048f60:	8b 04 85 00 a4 04 08 	mov    0x804a400(,%eax,4),%eax
 8048f67:	01 c1                	add    %eax,%ecx
 8048f69:	83 f8 0f             	cmp    $0xf,%eax
 8048f6c:	75 ef                	jne    8048f5d <phase_7+0x4e>
 8048f6e:	c7 44 24 04 0f 00 00 	movl   $0xf,0x4(%esp)
 8048f75:	00 
 8048f76:	83 fa 0e             	cmp    $0xe,%edx
 8048f79:	75 06                	jne    8048f81 <phase_7+0x72>
 8048f7b:	3b 4c 24 08          	cmp    0x8(%esp),%ecx
 8048f7f:	74 05                	je     8048f86 <phase_7+0x77>
 8048f81:	e8 e4 04 00 00       	call   804946a <explode_bomb>
 8048f86:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8048f8a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048f91:	74 05                	je     8048f98 <phase_7+0x89>
 8048f93:	e8 68 f8 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8048f98:	83 c4 1c             	add    $0x1c,%esp
 8048f9b:	c3                   	ret    

08048f9c <phase_8>:
 8048f9c:	56                   	push   %esi
 8048f9d:	53                   	push   %ebx
 8048f9e:	83 ec 4c             	sub    $0x4c,%esp
 8048fa1:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048fa7:	89 44 24 44          	mov    %eax,0x44(%esp)
 8048fab:	31 c0                	xor    %eax,%eax
 8048fad:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048fb1:	50                   	push   %eax
 8048fb2:	ff 74 24 5c          	pushl  0x5c(%esp)
 8048fb6:	e8 ec 04 00 00       	call   80494a7 <read_six_numbers>
 8048fbb:	83 c4 10             	add    $0x10,%esp
 8048fbe:	be 00 00 00 00       	mov    $0x0,%esi
 8048fc3:	8b 44 b4 0c          	mov    0xc(%esp,%esi,4),%eax
 8048fc7:	83 e8 01             	sub    $0x1,%eax
 8048fca:	83 f8 05             	cmp    $0x5,%eax
 8048fcd:	76 05                	jbe    8048fd4 <phase_8+0x38>
 8048fcf:	e8 96 04 00 00       	call   804946a <explode_bomb>
 8048fd4:	83 c6 01             	add    $0x1,%esi
 8048fd7:	83 fe 06             	cmp    $0x6,%esi
 8048fda:	74 33                	je     804900f <phase_8+0x73>
 8048fdc:	89 f3                	mov    %esi,%ebx
 8048fde:	8b 44 9c 0c          	mov    0xc(%esp,%ebx,4),%eax
 8048fe2:	39 44 b4 08          	cmp    %eax,0x8(%esp,%esi,4)
 8048fe6:	75 05                	jne    8048fed <phase_8+0x51>
 8048fe8:	e8 7d 04 00 00       	call   804946a <explode_bomb>
 8048fed:	83 c3 01             	add    $0x1,%ebx
 8048ff0:	83 fb 05             	cmp    $0x5,%ebx
 8048ff3:	7e e9                	jle    8048fde <phase_8+0x42>
 8048ff5:	eb cc                	jmp    8048fc3 <phase_8+0x27>
 8048ff7:	8b 52 08             	mov    0x8(%edx),%edx
 8048ffa:	83 c0 01             	add    $0x1,%eax
 8048ffd:	39 c8                	cmp    %ecx,%eax
 8048fff:	75 f6                	jne    8048ff7 <phase_8+0x5b>
 8049001:	89 54 b4 24          	mov    %edx,0x24(%esp,%esi,4)
 8049005:	83 c3 01             	add    $0x1,%ebx
 8049008:	83 fb 06             	cmp    $0x6,%ebx
 804900b:	75 07                	jne    8049014 <phase_8+0x78>
 804900d:	eb 1c                	jmp    804902b <phase_8+0x8f>
 804900f:	bb 00 00 00 00       	mov    $0x0,%ebx
 8049014:	89 de                	mov    %ebx,%esi
 8049016:	8b 4c 9c 0c          	mov    0xc(%esp,%ebx,4),%ecx
 804901a:	b8 01 00 00 00       	mov    $0x1,%eax
 804901f:	ba 54 d1 04 08       	mov    $0x804d154,%edx
 8049024:	83 f9 01             	cmp    $0x1,%ecx
 8049027:	7f ce                	jg     8048ff7 <phase_8+0x5b>
 8049029:	eb d6                	jmp    8049001 <phase_8+0x65>
 804902b:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 804902f:	8d 44 24 24          	lea    0x24(%esp),%eax
 8049033:	8d 74 24 38          	lea    0x38(%esp),%esi
 8049037:	89 d9                	mov    %ebx,%ecx
 8049039:	8b 50 04             	mov    0x4(%eax),%edx
 804903c:	89 51 08             	mov    %edx,0x8(%ecx)
 804903f:	83 c0 04             	add    $0x4,%eax
 8049042:	89 d1                	mov    %edx,%ecx
 8049044:	39 f0                	cmp    %esi,%eax
 8049046:	75 f1                	jne    8049039 <phase_8+0x9d>
 8049048:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
 804904f:	be 05 00 00 00       	mov    $0x5,%esi
 8049054:	8b 43 08             	mov    0x8(%ebx),%eax
 8049057:	8b 00                	mov    (%eax),%eax
 8049059:	39 03                	cmp    %eax,(%ebx)
 804905b:	7d 05                	jge    8049062 <phase_8+0xc6>
 804905d:	e8 08 04 00 00       	call   804946a <explode_bomb>
 8049062:	8b 5b 08             	mov    0x8(%ebx),%ebx
 8049065:	83 ee 01             	sub    $0x1,%esi
 8049068:	75 ea                	jne    8049054 <phase_8+0xb8>
 804906a:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 804906e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8049075:	74 05                	je     804907c <phase_8+0xe0>
 8049077:	e8 84 f7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804907c:	83 c4 44             	add    $0x44,%esp
 804907f:	5b                   	pop    %ebx
 8049080:	5e                   	pop    %esi
 8049081:	c3                   	ret    

08049082 <fun9>:
 8049082:	53                   	push   %ebx
 8049083:	83 ec 08             	sub    $0x8,%esp
 8049086:	8b 54 24 10          	mov    0x10(%esp),%edx
 804908a:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 804908e:	85 d2                	test   %edx,%edx
 8049090:	74 37                	je     80490c9 <fun9+0x47>
 8049092:	8b 1a                	mov    (%edx),%ebx
 8049094:	39 cb                	cmp    %ecx,%ebx
 8049096:	7e 13                	jle    80490ab <fun9+0x29>
 8049098:	83 ec 08             	sub    $0x8,%esp
 804909b:	51                   	push   %ecx
 804909c:	ff 72 04             	pushl  0x4(%edx)
 804909f:	e8 de ff ff ff       	call   8049082 <fun9>
 80490a4:	83 c4 10             	add    $0x10,%esp
 80490a7:	01 c0                	add    %eax,%eax
 80490a9:	eb 23                	jmp    80490ce <fun9+0x4c>
 80490ab:	b8 00 00 00 00       	mov    $0x0,%eax
 80490b0:	39 cb                	cmp    %ecx,%ebx
 80490b2:	74 1a                	je     80490ce <fun9+0x4c>
 80490b4:	83 ec 08             	sub    $0x8,%esp
 80490b7:	51                   	push   %ecx
 80490b8:	ff 72 08             	pushl  0x8(%edx)
 80490bb:	e8 c2 ff ff ff       	call   8049082 <fun9>
 80490c0:	83 c4 10             	add    $0x10,%esp
 80490c3:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 80490c7:	eb 05                	jmp    80490ce <fun9+0x4c>
 80490c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80490ce:	83 c4 08             	add    $0x8,%esp
 80490d1:	5b                   	pop    %ebx
 80490d2:	c3                   	ret    

080490d3 <phase_9>:
 80490d3:	53                   	push   %ebx
 80490d4:	83 ec 0c             	sub    $0xc,%esp
 80490d7:	6a 0a                	push   $0xa
 80490d9:	6a 00                	push   $0x0
 80490db:	ff 74 24 1c          	pushl  0x1c(%esp)
 80490df:	e8 3c f8 ff ff       	call   8048920 <strtol@plt>
 80490e4:	89 c3                	mov    %eax,%ebx
 80490e6:	8d 40 ff             	lea    -0x1(%eax),%eax
 80490e9:	83 c4 10             	add    $0x10,%esp
 80490ec:	3d ec 03 00 00       	cmp    $0x3ec,%eax
 80490f1:	76 05                	jbe    80490f8 <phase_9+0x25>
 80490f3:	e8 72 03 00 00       	call   804946a <explode_bomb>
 80490f8:	83 ec 08             	sub    $0x8,%esp
 80490fb:	53                   	push   %ebx
 80490fc:	68 a0 d0 04 08       	push   $0x804d0a0
 8049101:	e8 7c ff ff ff       	call   8049082 <fun9>
 8049106:	83 c4 10             	add    $0x10,%esp
 8049109:	83 f8 04             	cmp    $0x4,%eax
 804910c:	74 05                	je     8049113 <phase_9+0x40>
 804910e:	e8 57 03 00 00       	call   804946a <explode_bomb>
 8049113:	83 c4 08             	add    $0x8,%esp
 8049116:	5b                   	pop    %ebx
 8049117:	c3                   	ret    

08049118 <sig_handler>:
 8049118:	83 ec 18             	sub    $0x18,%esp
 804911b:	68 40 a4 04 08       	push   $0x804a440
 8049120:	e8 2b f7 ff ff       	call   8048850 <puts@plt>
 8049125:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 804912c:	e8 af f6 ff ff       	call   80487e0 <sleep@plt>
 8049131:	83 c4 08             	add    $0x8,%esp
 8049134:	68 9d a5 04 08       	push   $0x804a59d
 8049139:	6a 01                	push   $0x1
 804913b:	e8 a0 f7 ff ff       	call   80488e0 <__printf_chk@plt>
 8049140:	83 c4 04             	add    $0x4,%esp
 8049143:	ff 35 e4 d7 04 08    	pushl  0x804d7e4
 8049149:	e8 62 f6 ff ff       	call   80487b0 <fflush@plt>
 804914e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049155:	e8 86 f6 ff ff       	call   80487e0 <sleep@plt>
 804915a:	c7 04 24 a5 a5 04 08 	movl   $0x804a5a5,(%esp)
 8049161:	e8 ea f6 ff ff       	call   8048850 <puts@plt>
 8049166:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 804916d:	e8 fe f6 ff ff       	call   8048870 <exit@plt>

08049172 <invalid_phase>:
 8049172:	83 ec 10             	sub    $0x10,%esp
 8049175:	ff 74 24 14          	pushl  0x14(%esp)
 8049179:	68 ad a5 04 08       	push   $0x804a5ad
 804917e:	6a 01                	push   $0x1
 8049180:	e8 5b f7 ff ff       	call   80488e0 <__printf_chk@plt>
 8049185:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804918c:	e8 df f6 ff ff       	call   8048870 <exit@plt>

08049191 <string_length>:
 8049191:	8b 54 24 04          	mov    0x4(%esp),%edx
 8049195:	80 3a 00             	cmpb   $0x0,(%edx)
 8049198:	74 10                	je     80491aa <string_length+0x19>
 804919a:	b8 00 00 00 00       	mov    $0x0,%eax
 804919f:	83 c0 01             	add    $0x1,%eax
 80491a2:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 80491a6:	75 f7                	jne    804919f <string_length+0xe>
 80491a8:	f3 c3                	repz ret 
 80491aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80491af:	c3                   	ret    

080491b0 <strings_not_equal>:
 80491b0:	57                   	push   %edi
 80491b1:	56                   	push   %esi
 80491b2:	53                   	push   %ebx
 80491b3:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 80491b7:	8b 74 24 14          	mov    0x14(%esp),%esi
 80491bb:	53                   	push   %ebx
 80491bc:	e8 d0 ff ff ff       	call   8049191 <string_length>
 80491c1:	89 c7                	mov    %eax,%edi
 80491c3:	89 34 24             	mov    %esi,(%esp)
 80491c6:	e8 c6 ff ff ff       	call   8049191 <string_length>
 80491cb:	83 c4 04             	add    $0x4,%esp
 80491ce:	ba 01 00 00 00       	mov    $0x1,%edx
 80491d3:	39 c7                	cmp    %eax,%edi
 80491d5:	75 38                	jne    804920f <strings_not_equal+0x5f>
 80491d7:	0f b6 03             	movzbl (%ebx),%eax
 80491da:	84 c0                	test   %al,%al
 80491dc:	74 1e                	je     80491fc <strings_not_equal+0x4c>
 80491de:	3a 06                	cmp    (%esi),%al
 80491e0:	74 06                	je     80491e8 <strings_not_equal+0x38>
 80491e2:	eb 1f                	jmp    8049203 <strings_not_equal+0x53>
 80491e4:	3a 06                	cmp    (%esi),%al
 80491e6:	75 22                	jne    804920a <strings_not_equal+0x5a>
 80491e8:	83 c3 01             	add    $0x1,%ebx
 80491eb:	83 c6 01             	add    $0x1,%esi
 80491ee:	0f b6 03             	movzbl (%ebx),%eax
 80491f1:	84 c0                	test   %al,%al
 80491f3:	75 ef                	jne    80491e4 <strings_not_equal+0x34>
 80491f5:	ba 00 00 00 00       	mov    $0x0,%edx
 80491fa:	eb 13                	jmp    804920f <strings_not_equal+0x5f>
 80491fc:	ba 00 00 00 00       	mov    $0x0,%edx
 8049201:	eb 0c                	jmp    804920f <strings_not_equal+0x5f>
 8049203:	ba 01 00 00 00       	mov    $0x1,%edx
 8049208:	eb 05                	jmp    804920f <strings_not_equal+0x5f>
 804920a:	ba 01 00 00 00       	mov    $0x1,%edx
 804920f:	89 d0                	mov    %edx,%eax
 8049211:	5b                   	pop    %ebx
 8049212:	5e                   	pop    %esi
 8049213:	5f                   	pop    %edi
 8049214:	c3                   	ret    

08049215 <initialize_bomb>:
 8049215:	56                   	push   %esi
 8049216:	53                   	push   %ebx
 8049217:	81 ec 5c 20 00 00    	sub    $0x205c,%esp
 804921d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049223:	89 84 24 54 20 00 00 	mov    %eax,0x2054(%esp)
 804922a:	31 c0                	xor    %eax,%eax
 804922c:	68 18 91 04 08       	push   $0x8049118
 8049231:	6a 02                	push   $0x2
 8049233:	e8 98 f5 ff ff       	call   80487d0 <signal@plt>
 8049238:	83 c4 08             	add    $0x8,%esp
 804923b:	6a 40                	push   $0x40
 804923d:	8d 44 24 18          	lea    0x18(%esp),%eax
 8049241:	50                   	push   %eax
 8049242:	e8 d9 f5 ff ff       	call   8048820 <gethostname@plt>
 8049247:	83 c4 10             	add    $0x10,%esp
 804924a:	85 c0                	test   %eax,%eax
 804924c:	75 14                	jne    8049262 <initialize_bomb+0x4d>
 804924e:	a1 c0 d5 04 08       	mov    0x804d5c0,%eax
 8049253:	bb c4 d5 04 08       	mov    $0x804d5c4,%ebx
 8049258:	8d 74 24 0c          	lea    0xc(%esp),%esi
 804925c:	85 c0                	test   %eax,%eax
 804925e:	75 1b                	jne    804927b <initialize_bomb+0x66>
 8049260:	eb 56                	jmp    80492b8 <initialize_bomb+0xa3>
 8049262:	83 ec 0c             	sub    $0xc,%esp
 8049265:	68 78 a4 04 08       	push   $0x804a478
 804926a:	e8 e1 f5 ff ff       	call   8048850 <puts@plt>
 804926f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049276:	e8 f5 f5 ff ff       	call   8048870 <exit@plt>
 804927b:	83 ec 08             	sub    $0x8,%esp
 804927e:	56                   	push   %esi
 804927f:	50                   	push   %eax
 8049280:	e8 1b f6 ff ff       	call   80488a0 <strcasecmp@plt>
 8049285:	83 c4 10             	add    $0x10,%esp
 8049288:	85 c0                	test   %eax,%eax
 804928a:	74 45                	je     80492d1 <initialize_bomb+0xbc>
 804928c:	83 c3 04             	add    $0x4,%ebx
 804928f:	8b 43 fc             	mov    -0x4(%ebx),%eax
 8049292:	85 c0                	test   %eax,%eax
 8049294:	75 e5                	jne    804927b <initialize_bomb+0x66>
 8049296:	eb 20                	jmp    80492b8 <initialize_bomb+0xa3>
 8049298:	83 ec 04             	sub    $0x4,%esp
 804929b:	8d 44 24 50          	lea    0x50(%esp),%eax
 804929f:	50                   	push   %eax
 80492a0:	68 be a5 04 08       	push   $0x804a5be
 80492a5:	6a 01                	push   $0x1
 80492a7:	e8 34 f6 ff ff       	call   80488e0 <__printf_chk@plt>
 80492ac:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80492b3:	e8 b8 f5 ff ff       	call   8048870 <exit@plt>
 80492b8:	83 ec 0c             	sub    $0xc,%esp
 80492bb:	68 b0 a4 04 08       	push   $0x804a4b0
 80492c0:	e8 8b f5 ff ff       	call   8048850 <puts@plt>
 80492c5:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80492cc:	e8 9f f5 ff ff       	call   8048870 <exit@plt>
 80492d1:	83 ec 0c             	sub    $0xc,%esp
 80492d4:	8d 44 24 58          	lea    0x58(%esp),%eax
 80492d8:	50                   	push   %eax
 80492d9:	e8 29 0c 00 00       	call   8049f07 <init_driver>
 80492de:	83 c4 10             	add    $0x10,%esp
 80492e1:	85 c0                	test   %eax,%eax
 80492e3:	78 b3                	js     8049298 <initialize_bomb+0x83>
 80492e5:	8b 84 24 4c 20 00 00 	mov    0x204c(%esp),%eax
 80492ec:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80492f3:	74 05                	je     80492fa <initialize_bomb+0xe5>
 80492f5:	e8 06 f5 ff ff       	call   8048800 <__stack_chk_fail@plt>
 80492fa:	81 c4 54 20 00 00    	add    $0x2054,%esp
 8049300:	5b                   	pop    %ebx
 8049301:	5e                   	pop    %esi
 8049302:	c3                   	ret    

08049303 <initialize_bomb_solve>:
 8049303:	f3 c3                	repz ret 

08049305 <blank_line>:
 8049305:	56                   	push   %esi
 8049306:	53                   	push   %ebx
 8049307:	83 ec 04             	sub    $0x4,%esp
 804930a:	8b 74 24 10          	mov    0x10(%esp),%esi
 804930e:	eb 14                	jmp    8049324 <blank_line+0x1f>
 8049310:	e8 3b f6 ff ff       	call   8048950 <__ctype_b_loc@plt>
 8049315:	83 c6 01             	add    $0x1,%esi
 8049318:	0f be db             	movsbl %bl,%ebx
 804931b:	8b 00                	mov    (%eax),%eax
 804931d:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 8049322:	74 0e                	je     8049332 <blank_line+0x2d>
 8049324:	0f b6 1e             	movzbl (%esi),%ebx
 8049327:	84 db                	test   %bl,%bl
 8049329:	75 e5                	jne    8049310 <blank_line+0xb>
 804932b:	b8 01 00 00 00       	mov    $0x1,%eax
 8049330:	eb 05                	jmp    8049337 <blank_line+0x32>
 8049332:	b8 00 00 00 00       	mov    $0x0,%eax
 8049337:	83 c4 04             	add    $0x4,%esp
 804933a:	5b                   	pop    %ebx
 804933b:	5e                   	pop    %esi
 804933c:	c3                   	ret    

0804933d <skip>:
 804933d:	53                   	push   %ebx
 804933e:	83 ec 08             	sub    $0x8,%esp
 8049341:	83 ec 04             	sub    $0x4,%esp
 8049344:	ff 35 f0 d7 04 08    	pushl  0x804d7f0
 804934a:	6a 50                	push   $0x50
 804934c:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 8049351:	8d 04 80             	lea    (%eax,%eax,4),%eax
 8049354:	c1 e0 04             	shl    $0x4,%eax
 8049357:	05 00 d8 04 08       	add    $0x804d800,%eax
 804935c:	50                   	push   %eax
 804935d:	e8 5e f4 ff ff       	call   80487c0 <fgets@plt>
 8049362:	89 c3                	mov    %eax,%ebx
 8049364:	83 c4 10             	add    $0x10,%esp
 8049367:	85 c0                	test   %eax,%eax
 8049369:	74 10                	je     804937b <skip+0x3e>
 804936b:	83 ec 0c             	sub    $0xc,%esp
 804936e:	50                   	push   %eax
 804936f:	e8 91 ff ff ff       	call   8049305 <blank_line>
 8049374:	83 c4 10             	add    $0x10,%esp
 8049377:	85 c0                	test   %eax,%eax
 8049379:	75 c6                	jne    8049341 <skip+0x4>
 804937b:	89 d8                	mov    %ebx,%eax
 804937d:	83 c4 08             	add    $0x8,%esp
 8049380:	5b                   	pop    %ebx
 8049381:	c3                   	ret    

08049382 <send_msg>:
 8049382:	57                   	push   %edi
 8049383:	53                   	push   %ebx
 8049384:	81 ec 14 40 00 00    	sub    $0x4014,%esp
 804938a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049390:	89 84 24 0c 40 00 00 	mov    %eax,0x400c(%esp)
 8049397:	31 c0                	xor    %eax,%eax
 8049399:	8b 1d ec d7 04 08    	mov    0x804d7ec,%ebx
 804939f:	8d 54 9b fb          	lea    -0x5(%ebx,%ebx,4),%edx
 80493a3:	c1 e2 04             	shl    $0x4,%edx
 80493a6:	81 c2 00 d8 04 08    	add    $0x804d800,%edx
 80493ac:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80493b1:	89 d7                	mov    %edx,%edi
 80493b3:	f2 ae                	repnz scas %es:(%edi),%al
 80493b5:	f7 d1                	not    %ecx
 80493b7:	83 c1 63             	add    $0x63,%ecx
 80493ba:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 80493c0:	76 1b                	jbe    80493dd <send_msg+0x5b>
 80493c2:	83 ec 08             	sub    $0x8,%esp
 80493c5:	68 e8 a4 04 08       	push   $0x804a4e8
 80493ca:	6a 01                	push   $0x1
 80493cc:	e8 0f f5 ff ff       	call   80488e0 <__printf_chk@plt>
 80493d1:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80493d8:	e8 93 f4 ff ff       	call   8048870 <exit@plt>
 80493dd:	83 bc 24 20 40 00 00 	cmpl   $0x0,0x4020(%esp)
 80493e4:	00 
 80493e5:	b9 e0 a5 04 08       	mov    $0x804a5e0,%ecx
 80493ea:	b8 d8 a5 04 08       	mov    $0x804a5d8,%eax
 80493ef:	0f 44 c1             	cmove  %ecx,%eax
 80493f2:	52                   	push   %edx
 80493f3:	53                   	push   %ebx
 80493f4:	50                   	push   %eax
 80493f5:	ff 35 a0 d5 04 08    	pushl  0x804d5a0
 80493fb:	68 e9 a5 04 08       	push   $0x804a5e9
 8049400:	68 00 20 00 00       	push   $0x2000
 8049405:	6a 01                	push   $0x1
 8049407:	8d 5c 24 28          	lea    0x28(%esp),%ebx
 804940b:	53                   	push   %ebx
 804940c:	e8 4f f5 ff ff       	call   8048960 <__sprintf_chk@plt>
 8049411:	83 c4 20             	add    $0x20,%esp
 8049414:	8d 84 24 0c 20 00 00 	lea    0x200c(%esp),%eax
 804941b:	50                   	push   %eax
 804941c:	6a 00                	push   $0x0
 804941e:	53                   	push   %ebx
 804941f:	68 a0 d1 04 08       	push   $0x804d1a0
 8049424:	e8 b0 0c 00 00       	call   804a0d9 <driver_post>
 8049429:	83 c4 10             	add    $0x10,%esp
 804942c:	85 c0                	test   %eax,%eax
 804942e:	79 1c                	jns    804944c <send_msg+0xca>
 8049430:	83 ec 0c             	sub    $0xc,%esp
 8049433:	8d 84 24 18 20 00 00 	lea    0x2018(%esp),%eax
 804943a:	50                   	push   %eax
 804943b:	e8 10 f4 ff ff       	call   8048850 <puts@plt>
 8049440:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049447:	e8 24 f4 ff ff       	call   8048870 <exit@plt>
 804944c:	8b 84 24 0c 40 00 00 	mov    0x400c(%esp),%eax
 8049453:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804945a:	74 05                	je     8049461 <send_msg+0xdf>
 804945c:	e8 9f f3 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049461:	81 c4 14 40 00 00    	add    $0x4014,%esp
 8049467:	5b                   	pop    %ebx
 8049468:	5f                   	pop    %edi
 8049469:	c3                   	ret    

0804946a <explode_bomb>:
 804946a:	83 ec 18             	sub    $0x18,%esp
 804946d:	68 f5 a5 04 08       	push   $0x804a5f5
 8049472:	e8 d9 f3 ff ff       	call   8048850 <puts@plt>
 8049477:	c7 04 24 fe a5 04 08 	movl   $0x804a5fe,(%esp)
 804947e:	e8 cd f3 ff ff       	call   8048850 <puts@plt>
 8049483:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804948a:	e8 f3 fe ff ff       	call   8049382 <send_msg>
 804948f:	c7 04 24 0c a5 04 08 	movl   $0x804a50c,(%esp)
 8049496:	e8 b5 f3 ff ff       	call   8048850 <puts@plt>
 804949b:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80494a2:	e8 c9 f3 ff ff       	call   8048870 <exit@plt>

080494a7 <read_six_numbers>:
 80494a7:	83 ec 0c             	sub    $0xc,%esp
 80494aa:	8b 44 24 14          	mov    0x14(%esp),%eax
 80494ae:	8d 50 14             	lea    0x14(%eax),%edx
 80494b1:	52                   	push   %edx
 80494b2:	8d 50 10             	lea    0x10(%eax),%edx
 80494b5:	52                   	push   %edx
 80494b6:	8d 50 0c             	lea    0xc(%eax),%edx
 80494b9:	52                   	push   %edx
 80494ba:	8d 50 08             	lea    0x8(%eax),%edx
 80494bd:	52                   	push   %edx
 80494be:	8d 50 04             	lea    0x4(%eax),%edx
 80494c1:	52                   	push   %edx
 80494c2:	50                   	push   %eax
 80494c3:	68 15 a6 04 08       	push   $0x804a615
 80494c8:	ff 74 24 2c          	pushl  0x2c(%esp)
 80494cc:	e8 df f3 ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 80494d1:	83 c4 20             	add    $0x20,%esp
 80494d4:	83 f8 05             	cmp    $0x5,%eax
 80494d7:	7f 05                	jg     80494de <read_six_numbers+0x37>
 80494d9:	e8 8c ff ff ff       	call   804946a <explode_bomb>
 80494de:	83 c4 0c             	add    $0xc,%esp
 80494e1:	c3                   	ret    

080494e2 <read_line>:
 80494e2:	57                   	push   %edi
 80494e3:	56                   	push   %esi
 80494e4:	53                   	push   %ebx
 80494e5:	e8 53 fe ff ff       	call   804933d <skip>
 80494ea:	85 c0                	test   %eax,%eax
 80494ec:	75 70                	jne    804955e <read_line+0x7c>
 80494ee:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 80494f3:	39 05 f0 d7 04 08    	cmp    %eax,0x804d7f0
 80494f9:	75 19                	jne    8049514 <read_line+0x32>
 80494fb:	83 ec 0c             	sub    $0xc,%esp
 80494fe:	68 27 a6 04 08       	push   $0x804a627
 8049503:	e8 48 f3 ff ff       	call   8048850 <puts@plt>
 8049508:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804950f:	e8 5c f3 ff ff       	call   8048870 <exit@plt>
 8049514:	83 ec 0c             	sub    $0xc,%esp
 8049517:	68 45 a6 04 08       	push   $0x804a645
 804951c:	e8 0f f3 ff ff       	call   8048830 <getenv@plt>
 8049521:	83 c4 10             	add    $0x10,%esp
 8049524:	85 c0                	test   %eax,%eax
 8049526:	74 0a                	je     8049532 <read_line+0x50>
 8049528:	83 ec 0c             	sub    $0xc,%esp
 804952b:	6a 00                	push   $0x0
 804952d:	e8 3e f3 ff ff       	call   8048870 <exit@plt>
 8049532:	a1 e0 d7 04 08       	mov    0x804d7e0,%eax
 8049537:	a3 f0 d7 04 08       	mov    %eax,0x804d7f0
 804953c:	e8 fc fd ff ff       	call   804933d <skip>
 8049541:	85 c0                	test   %eax,%eax
 8049543:	75 19                	jne    804955e <read_line+0x7c>
 8049545:	83 ec 0c             	sub    $0xc,%esp
 8049548:	68 27 a6 04 08       	push   $0x804a627
 804954d:	e8 fe f2 ff ff       	call   8048850 <puts@plt>
 8049552:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049559:	e8 12 f3 ff ff       	call   8048870 <exit@plt>
 804955e:	8b 15 ec d7 04 08    	mov    0x804d7ec,%edx
 8049564:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 8049567:	c1 e3 04             	shl    $0x4,%ebx
 804956a:	81 c3 00 d8 04 08    	add    $0x804d800,%ebx
 8049570:	b8 00 00 00 00       	mov    $0x0,%eax
 8049575:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804957a:	89 df                	mov    %ebx,%edi
 804957c:	f2 ae                	repnz scas %es:(%edi),%al
 804957e:	f7 d1                	not    %ecx
 8049580:	83 e9 01             	sub    $0x1,%ecx
 8049583:	83 f9 4e             	cmp    $0x4e,%ecx
 8049586:	7e 36                	jle    80495be <read_line+0xdc>
 8049588:	83 ec 0c             	sub    $0xc,%esp
 804958b:	68 50 a6 04 08       	push   $0x804a650
 8049590:	e8 bb f2 ff ff       	call   8048850 <puts@plt>
 8049595:	a1 ec d7 04 08       	mov    0x804d7ec,%eax
 804959a:	8d 50 01             	lea    0x1(%eax),%edx
 804959d:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 80495a3:	6b c0 50             	imul   $0x50,%eax,%eax
 80495a6:	05 00 d8 04 08       	add    $0x804d800,%eax
 80495ab:	be 6b a6 04 08       	mov    $0x804a66b,%esi
 80495b0:	b9 04 00 00 00       	mov    $0x4,%ecx
 80495b5:	89 c7                	mov    %eax,%edi
 80495b7:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 80495b9:	e8 ac fe ff ff       	call   804946a <explode_bomb>
 80495be:	8d 04 92             	lea    (%edx,%edx,4),%eax
 80495c1:	c1 e0 04             	shl    $0x4,%eax
 80495c4:	c6 84 01 ff d7 04 08 	movb   $0x0,0x804d7ff(%ecx,%eax,1)
 80495cb:	00 
 80495cc:	83 c2 01             	add    $0x1,%edx
 80495cf:	89 15 ec d7 04 08    	mov    %edx,0x804d7ec
 80495d5:	89 d8                	mov    %ebx,%eax
 80495d7:	5b                   	pop    %ebx
 80495d8:	5e                   	pop    %esi
 80495d9:	5f                   	pop    %edi
 80495da:	c3                   	ret    

080495db <phase_defused>:
 80495db:	83 ec 18             	sub    $0x18,%esp
 80495de:	6a 01                	push   $0x1
 80495e0:	e8 9d fd ff ff       	call   8049382 <send_msg>
 80495e5:	83 c4 10             	add    $0x10,%esp
 80495e8:	83 3d ec d7 04 08 09 	cmpl   $0x9,0x804d7ec
 80495ef:	75 1c                	jne    804960d <phase_defused+0x32>
 80495f1:	83 ec 0c             	sub    $0xc,%esp
 80495f4:	68 30 a5 04 08       	push   $0x804a530
 80495f9:	e8 52 f2 ff ff       	call   8048850 <puts@plt>
 80495fe:	c7 04 24 5c a5 04 08 	movl   $0x804a55c,(%esp)
 8049605:	e8 46 f2 ff ff       	call   8048850 <puts@plt>
 804960a:	83 c4 10             	add    $0x10,%esp
 804960d:	83 c4 0c             	add    $0xc,%esp
 8049610:	c3                   	ret    

08049611 <sigalrm_handler>:
 8049611:	83 ec 0c             	sub    $0xc,%esp
 8049614:	6a 00                	push   $0x0
 8049616:	68 64 aa 04 08       	push   $0x804aa64
 804961b:	6a 01                	push   $0x1
 804961d:	ff 35 c0 d7 04 08    	pushl  0x804d7c0
 8049623:	e8 d8 f2 ff ff       	call   8048900 <__fprintf_chk@plt>
 8049628:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804962f:	e8 3c f2 ff ff       	call   8048870 <exit@plt>

08049634 <rio_readlineb>:
 8049634:	55                   	push   %ebp
 8049635:	57                   	push   %edi
 8049636:	56                   	push   %esi
 8049637:	53                   	push   %ebx
 8049638:	83 ec 2c             	sub    $0x2c,%esp
 804963b:	89 d7                	mov    %edx,%edi
 804963d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8049641:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 8049648:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 804964c:	31 d2                	xor    %edx,%edx
 804964e:	83 f9 01             	cmp    $0x1,%ecx
 8049651:	76 79                	jbe    80496cc <rio_readlineb+0x98>
 8049653:	89 c3                	mov    %eax,%ebx
 8049655:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8049659:	bd 01 00 00 00       	mov    $0x1,%ebp
 804965e:	8d 73 0c             	lea    0xc(%ebx),%esi
 8049661:	eb 2d                	jmp    8049690 <rio_readlineb+0x5c>
 8049663:	83 ec 04             	sub    $0x4,%esp
 8049666:	68 00 20 00 00       	push   $0x2000
 804966b:	56                   	push   %esi
 804966c:	ff 33                	pushl  (%ebx)
 804966e:	e8 2d f1 ff ff       	call   80487a0 <read@plt>
 8049673:	89 43 04             	mov    %eax,0x4(%ebx)
 8049676:	83 c4 10             	add    $0x10,%esp
 8049679:	85 c0                	test   %eax,%eax
 804967b:	79 0c                	jns    8049689 <rio_readlineb+0x55>
 804967d:	e8 4e f2 ff ff       	call   80488d0 <__errno_location@plt>
 8049682:	83 38 04             	cmpl   $0x4,(%eax)
 8049685:	74 09                	je     8049690 <rio_readlineb+0x5c>
 8049687:	eb 62                	jmp    80496eb <rio_readlineb+0xb7>
 8049689:	85 c0                	test   %eax,%eax
 804968b:	74 63                	je     80496f0 <rio_readlineb+0xbc>
 804968d:	89 73 08             	mov    %esi,0x8(%ebx)
 8049690:	8b 43 04             	mov    0x4(%ebx),%eax
 8049693:	85 c0                	test   %eax,%eax
 8049695:	7e cc                	jle    8049663 <rio_readlineb+0x2f>
 8049697:	8b 4b 08             	mov    0x8(%ebx),%ecx
 804969a:	0f b6 11             	movzbl (%ecx),%edx
 804969d:	88 54 24 1b          	mov    %dl,0x1b(%esp)
 80496a1:	83 c1 01             	add    $0x1,%ecx
 80496a4:	89 4b 08             	mov    %ecx,0x8(%ebx)
 80496a7:	83 e8 01             	sub    $0x1,%eax
 80496aa:	89 43 04             	mov    %eax,0x4(%ebx)
 80496ad:	83 c7 01             	add    $0x1,%edi
 80496b0:	88 57 ff             	mov    %dl,-0x1(%edi)
 80496b3:	80 fa 0a             	cmp    $0xa,%dl
 80496b6:	75 09                	jne    80496c1 <rio_readlineb+0x8d>
 80496b8:	eb 1d                	jmp    80496d7 <rio_readlineb+0xa3>
 80496ba:	83 fd 01             	cmp    $0x1,%ebp
 80496bd:	75 18                	jne    80496d7 <rio_readlineb+0xa3>
 80496bf:	eb 1b                	jmp    80496dc <rio_readlineb+0xa8>
 80496c1:	83 c5 01             	add    $0x1,%ebp
 80496c4:	3b 6c 24 08          	cmp    0x8(%esp),%ebp
 80496c8:	74 09                	je     80496d3 <rio_readlineb+0x9f>
 80496ca:	eb c4                	jmp    8049690 <rio_readlineb+0x5c>
 80496cc:	bd 01 00 00 00       	mov    $0x1,%ebp
 80496d1:	eb 04                	jmp    80496d7 <rio_readlineb+0xa3>
 80496d3:	8b 6c 24 0c          	mov    0xc(%esp),%ebp
 80496d7:	c6 07 00             	movb   $0x0,(%edi)
 80496da:	89 e8                	mov    %ebp,%eax
 80496dc:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80496e0:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80496e7:	74 17                	je     8049700 <rio_readlineb+0xcc>
 80496e9:	eb 10                	jmp    80496fb <rio_readlineb+0xc7>
 80496eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80496f0:	85 c0                	test   %eax,%eax
 80496f2:	74 c6                	je     80496ba <rio_readlineb+0x86>
 80496f4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80496f9:	eb e1                	jmp    80496dc <rio_readlineb+0xa8>
 80496fb:	e8 00 f1 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049700:	83 c4 2c             	add    $0x2c,%esp
 8049703:	5b                   	pop    %ebx
 8049704:	5e                   	pop    %esi
 8049705:	5f                   	pop    %edi
 8049706:	5d                   	pop    %ebp
 8049707:	c3                   	ret    

08049708 <submitr>:
 8049708:	55                   	push   %ebp
 8049709:	57                   	push   %edi
 804970a:	56                   	push   %esi
 804970b:	53                   	push   %ebx
 804970c:	81 ec 60 a0 00 00    	sub    $0xa060,%esp
 8049712:	8b b4 24 74 a0 00 00 	mov    0xa074(%esp),%esi
 8049719:	8b 84 24 7c a0 00 00 	mov    0xa07c(%esp),%eax
 8049720:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049724:	8b 84 24 80 a0 00 00 	mov    0xa080(%esp),%eax
 804972b:	89 44 24 14          	mov    %eax,0x14(%esp)
 804972f:	8b 84 24 84 a0 00 00 	mov    0xa084(%esp),%eax
 8049736:	89 44 24 18          	mov    %eax,0x18(%esp)
 804973a:	8b 9c 24 88 a0 00 00 	mov    0xa088(%esp),%ebx
 8049741:	8b 84 24 8c a0 00 00 	mov    0xa08c(%esp),%eax
 8049748:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804974c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049752:	89 84 24 50 a0 00 00 	mov    %eax,0xa050(%esp)
 8049759:	31 c0                	xor    %eax,%eax
 804975b:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8049762:	00 
 8049763:	6a 00                	push   $0x0
 8049765:	6a 01                	push   $0x1
 8049767:	6a 02                	push   $0x2
 8049769:	e8 82 f1 ff ff       	call   80488f0 <socket@plt>
 804976e:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049772:	83 c4 10             	add    $0x10,%esp
 8049775:	85 c0                	test   %eax,%eax
 8049777:	79 52                	jns    80497cb <submitr+0xc3>
 8049779:	8b 44 24 18          	mov    0x18(%esp),%eax
 804977d:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049783:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 804978a:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049791:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049798:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 804979f:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 80497a6:	c7 40 18 63 72 65 61 	movl   $0x61657263,0x18(%eax)
 80497ad:	c7 40 1c 74 65 20 73 	movl   $0x73206574,0x1c(%eax)
 80497b4:	c7 40 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%eax)
 80497bb:	66 c7 40 24 74 00    	movw   $0x74,0x24(%eax)
 80497c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80497c6:	e9 3f 06 00 00       	jmp    8049e0a <submitr+0x702>
 80497cb:	83 ec 0c             	sub    $0xc,%esp
 80497ce:	56                   	push   %esi
 80497cf:	e8 3c f1 ff ff       	call   8048910 <gethostbyname@plt>
 80497d4:	83 c4 10             	add    $0x10,%esp
 80497d7:	85 c0                	test   %eax,%eax
 80497d9:	75 73                	jne    804984e <submitr+0x146>
 80497db:	8b 44 24 18          	mov    0x18(%esp),%eax
 80497df:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80497e5:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 80497ec:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 80497f3:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 80497fa:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049801:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049808:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 804980f:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 8049816:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 804981d:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 8049824:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 804982b:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 8049831:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 8049835:	83 ec 0c             	sub    $0xc,%esp
 8049838:	ff 74 24 14          	pushl  0x14(%esp)
 804983c:	e8 ff f0 ff ff       	call   8048940 <close@plt>
 8049841:	83 c4 10             	add    $0x10,%esp
 8049844:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049849:	e9 bc 05 00 00       	jmp    8049e0a <submitr+0x702>
 804984e:	8d 74 24 30          	lea    0x30(%esp),%esi
 8049852:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8049859:	00 
 804985a:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 8049861:	00 
 8049862:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 8049869:	00 
 804986a:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 8049871:	00 
 8049872:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%esp)
 8049879:	6a 0c                	push   $0xc
 804987b:	ff 70 0c             	pushl  0xc(%eax)
 804987e:	8b 40 10             	mov    0x10(%eax),%eax
 8049881:	ff 30                	pushl  (%eax)
 8049883:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049887:	50                   	push   %eax
 8049888:	e8 d3 ef ff ff       	call   8048860 <__memmove_chk@plt>
 804988d:	0f b7 84 24 84 a0 00 	movzwl 0xa084(%esp),%eax
 8049894:	00 
 8049895:	66 c1 c8 08          	ror    $0x8,%ax
 8049899:	66 89 44 24 42       	mov    %ax,0x42(%esp)
 804989e:	83 c4 0c             	add    $0xc,%esp
 80498a1:	6a 10                	push   $0x10
 80498a3:	56                   	push   %esi
 80498a4:	ff 74 24 14          	pushl  0x14(%esp)
 80498a8:	e8 83 f0 ff ff       	call   8048930 <connect@plt>
 80498ad:	83 c4 10             	add    $0x10,%esp
 80498b0:	85 c0                	test   %eax,%eax
 80498b2:	79 65                	jns    8049919 <submitr+0x211>
 80498b4:	8b 44 24 18          	mov    0x18(%esp),%eax
 80498b8:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80498be:	c7 40 04 72 3a 20 55 	movl   $0x55203a72,0x4(%eax)
 80498c5:	c7 40 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%eax)
 80498cc:	c7 40 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%eax)
 80498d3:	c7 40 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%eax)
 80498da:	c7 40 14 6e 65 63 74 	movl   $0x7463656e,0x14(%eax)
 80498e1:	c7 40 18 20 74 6f 20 	movl   $0x206f7420,0x18(%eax)
 80498e8:	c7 40 1c 74 68 65 20 	movl   $0x20656874,0x1c(%eax)
 80498ef:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 80498f6:	66 c7 40 24 65 72    	movw   $0x7265,0x24(%eax)
 80498fc:	c6 40 26 00          	movb   $0x0,0x26(%eax)
 8049900:	83 ec 0c             	sub    $0xc,%esp
 8049903:	ff 74 24 14          	pushl  0x14(%esp)
 8049907:	e8 34 f0 ff ff       	call   8048940 <close@plt>
 804990c:	83 c4 10             	add    $0x10,%esp
 804990f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049914:	e9 f1 04 00 00       	jmp    8049e0a <submitr+0x702>
 8049919:	be ff ff ff ff       	mov    $0xffffffff,%esi
 804991e:	b8 00 00 00 00       	mov    $0x0,%eax
 8049923:	89 f1                	mov    %esi,%ecx
 8049925:	89 df                	mov    %ebx,%edi
 8049927:	f2 ae                	repnz scas %es:(%edi),%al
 8049929:	f7 d1                	not    %ecx
 804992b:	89 cd                	mov    %ecx,%ebp
 804992d:	89 f1                	mov    %esi,%ecx
 804992f:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 8049933:	f2 ae                	repnz scas %es:(%edi),%al
 8049935:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 8049939:	89 f1                	mov    %esi,%ecx
 804993b:	8b 7c 24 10          	mov    0x10(%esp),%edi
 804993f:	f2 ae                	repnz scas %es:(%edi),%al
 8049941:	89 ca                	mov    %ecx,%edx
 8049943:	f7 d2                	not    %edx
 8049945:	89 f1                	mov    %esi,%ecx
 8049947:	8b 7c 24 14          	mov    0x14(%esp),%edi
 804994b:	f2 ae                	repnz scas %es:(%edi),%al
 804994d:	2b 54 24 1c          	sub    0x1c(%esp),%edx
 8049951:	29 ca                	sub    %ecx,%edx
 8049953:	8d 44 6d fd          	lea    -0x3(%ebp,%ebp,2),%eax
 8049957:	8d 44 02 7b          	lea    0x7b(%edx,%eax,1),%eax
 804995b:	3d 00 20 00 00       	cmp    $0x2000,%eax
 8049960:	76 7e                	jbe    80499e0 <submitr+0x2d8>
 8049962:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049966:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 804996c:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 8049973:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 804997a:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 8049981:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 8049988:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 804998f:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 8049996:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 804999d:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 80499a4:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 80499ab:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 80499b2:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 80499b9:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 80499c0:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 80499c7:	83 ec 0c             	sub    $0xc,%esp
 80499ca:	ff 74 24 14          	pushl  0x14(%esp)
 80499ce:	e8 6d ef ff ff       	call   8048940 <close@plt>
 80499d3:	83 c4 10             	add    $0x10,%esp
 80499d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80499db:	e9 2a 04 00 00       	jmp    8049e0a <submitr+0x702>
 80499e0:	8d 94 24 4c 40 00 00 	lea    0x404c(%esp),%edx
 80499e7:	b9 00 08 00 00       	mov    $0x800,%ecx
 80499ec:	b8 00 00 00 00       	mov    $0x0,%eax
 80499f1:	89 d7                	mov    %edx,%edi
 80499f3:	f3 ab                	rep stos %eax,%es:(%edi)
 80499f5:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 80499fa:	89 df                	mov    %ebx,%edi
 80499fc:	f2 ae                	repnz scas %es:(%edi),%al
 80499fe:	f7 d1                	not    %ecx
 8049a00:	89 ce                	mov    %ecx,%esi
 8049a02:	83 ee 01             	sub    $0x1,%esi
 8049a05:	0f 84 5c 04 00 00    	je     8049e67 <submitr+0x75f>
 8049a0b:	89 d5                	mov    %edx,%ebp
 8049a0d:	bf d9 ff 00 00       	mov    $0xffd9,%edi
 8049a12:	0f b6 13             	movzbl (%ebx),%edx
 8049a15:	8d 4a d6             	lea    -0x2a(%edx),%ecx
 8049a18:	b8 01 00 00 00       	mov    $0x1,%eax
 8049a1d:	80 f9 0f             	cmp    $0xf,%cl
 8049a20:	77 0a                	ja     8049a2c <submitr+0x324>
 8049a22:	89 f8                	mov    %edi,%eax
 8049a24:	d3 e8                	shr    %cl,%eax
 8049a26:	83 f0 01             	xor    $0x1,%eax
 8049a29:	83 e0 01             	and    $0x1,%eax
 8049a2c:	80 fa 5f             	cmp    $0x5f,%dl
 8049a2f:	0f 94 c1             	sete   %cl
 8049a32:	38 c1                	cmp    %al,%cl
 8049a34:	73 0c                	jae    8049a42 <submitr+0x33a>
 8049a36:	89 d0                	mov    %edx,%eax
 8049a38:	83 e0 df             	and    $0xffffffdf,%eax
 8049a3b:	83 e8 41             	sub    $0x41,%eax
 8049a3e:	3c 19                	cmp    $0x19,%al
 8049a40:	77 08                	ja     8049a4a <submitr+0x342>
 8049a42:	88 55 00             	mov    %dl,0x0(%ebp)
 8049a45:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049a48:	eb 62                	jmp    8049aac <submitr+0x3a4>
 8049a4a:	80 fa 20             	cmp    $0x20,%dl
 8049a4d:	75 09                	jne    8049a58 <submitr+0x350>
 8049a4f:	c6 45 00 2b          	movb   $0x2b,0x0(%ebp)
 8049a53:	8d 6d 01             	lea    0x1(%ebp),%ebp
 8049a56:	eb 54                	jmp    8049aac <submitr+0x3a4>
 8049a58:	8d 42 e0             	lea    -0x20(%edx),%eax
 8049a5b:	3c 5f                	cmp    $0x5f,%al
 8049a5d:	76 09                	jbe    8049a68 <submitr+0x360>
 8049a5f:	80 fa 09             	cmp    $0x9,%dl
 8049a62:	0f 85 bb 03 00 00    	jne    8049e23 <submitr+0x71b>
 8049a68:	83 ec 0c             	sub    $0xc,%esp
 8049a6b:	0f b6 d2             	movzbl %dl,%edx
 8049a6e:	52                   	push   %edx
 8049a6f:	68 70 ab 04 08       	push   $0x804ab70
 8049a74:	6a 08                	push   $0x8
 8049a76:	6a 01                	push   $0x1
 8049a78:	8d 84 24 68 80 00 00 	lea    0x8068(%esp),%eax
 8049a7f:	50                   	push   %eax
 8049a80:	e8 db ee ff ff       	call   8048960 <__sprintf_chk@plt>
 8049a85:	0f b6 84 24 6c 80 00 	movzbl 0x806c(%esp),%eax
 8049a8c:	00 
 8049a8d:	88 45 00             	mov    %al,0x0(%ebp)
 8049a90:	0f b6 84 24 6d 80 00 	movzbl 0x806d(%esp),%eax
 8049a97:	00 
 8049a98:	88 45 01             	mov    %al,0x1(%ebp)
 8049a9b:	0f b6 84 24 6e 80 00 	movzbl 0x806e(%esp),%eax
 8049aa2:	00 
 8049aa3:	88 45 02             	mov    %al,0x2(%ebp)
 8049aa6:	83 c4 20             	add    $0x20,%esp
 8049aa9:	8d 6d 03             	lea    0x3(%ebp),%ebp
 8049aac:	83 c3 01             	add    $0x1,%ebx
 8049aaf:	83 ee 01             	sub    $0x1,%esi
 8049ab2:	0f 85 5a ff ff ff    	jne    8049a12 <submitr+0x30a>
 8049ab8:	e9 aa 03 00 00       	jmp    8049e67 <submitr+0x75f>
 8049abd:	83 ec 04             	sub    $0x4,%esp
 8049ac0:	53                   	push   %ebx
 8049ac1:	56                   	push   %esi
 8049ac2:	55                   	push   %ebp
 8049ac3:	e8 c8 ed ff ff       	call   8048890 <write@plt>
 8049ac8:	83 c4 10             	add    $0x10,%esp
 8049acb:	85 c0                	test   %eax,%eax
 8049acd:	7f 0f                	jg     8049ade <submitr+0x3d6>
 8049acf:	e8 fc ed ff ff       	call   80488d0 <__errno_location@plt>
 8049ad4:	83 38 04             	cmpl   $0x4,(%eax)
 8049ad7:	75 0f                	jne    8049ae8 <submitr+0x3e0>
 8049ad9:	b8 00 00 00 00       	mov    $0x0,%eax
 8049ade:	01 c6                	add    %eax,%esi
 8049ae0:	29 c3                	sub    %eax,%ebx
 8049ae2:	75 d9                	jne    8049abd <submitr+0x3b5>
 8049ae4:	85 ff                	test   %edi,%edi
 8049ae6:	79 69                	jns    8049b51 <submitr+0x449>
 8049ae8:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049aec:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049af2:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049af9:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b00:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049b07:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049b0e:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049b15:	c7 40 18 77 72 69 74 	movl   $0x74697277,0x18(%eax)
 8049b1c:	c7 40 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%eax)
 8049b23:	c7 40 20 20 74 68 65 	movl   $0x65687420,0x20(%eax)
 8049b2a:	c7 40 24 20 73 65 72 	movl   $0x72657320,0x24(%eax)
 8049b31:	c7 40 28 76 65 72 00 	movl   $0x726576,0x28(%eax)
 8049b38:	83 ec 0c             	sub    $0xc,%esp
 8049b3b:	ff 74 24 14          	pushl  0x14(%esp)
 8049b3f:	e8 fc ed ff ff       	call   8048940 <close@plt>
 8049b44:	83 c4 10             	add    $0x10,%esp
 8049b47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b4c:	e9 b9 02 00 00       	jmp    8049e0a <submitr+0x702>
 8049b51:	8b 44 24 08          	mov    0x8(%esp),%eax
 8049b55:	89 44 24 40          	mov    %eax,0x40(%esp)
 8049b59:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049b60:	00 
 8049b61:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 8049b65:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049b69:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049b6e:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049b75:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049b79:	e8 b6 fa ff ff       	call   8049634 <rio_readlineb>
 8049b7e:	85 c0                	test   %eax,%eax
 8049b80:	7f 7d                	jg     8049bff <submitr+0x4f7>
 8049b82:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049b86:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049b8c:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049b93:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049b9a:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049ba1:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049ba8:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049baf:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049bb6:	c7 40 1c 20 66 69 72 	movl   $0x72696620,0x1c(%eax)
 8049bbd:	c7 40 20 73 74 20 68 	movl   $0x68207473,0x20(%eax)
 8049bc4:	c7 40 24 65 61 64 65 	movl   $0x65646165,0x24(%eax)
 8049bcb:	c7 40 28 72 20 66 72 	movl   $0x72662072,0x28(%eax)
 8049bd2:	c7 40 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%eax)
 8049bd9:	c7 40 30 65 72 76 65 	movl   $0x65767265,0x30(%eax)
 8049be0:	66 c7 40 34 72 00    	movw   $0x72,0x34(%eax)
 8049be6:	83 ec 0c             	sub    $0xc,%esp
 8049be9:	ff 74 24 14          	pushl  0x14(%esp)
 8049bed:	e8 4e ed ff ff       	call   8048940 <close@plt>
 8049bf2:	83 c4 10             	add    $0x10,%esp
 8049bf5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049bfa:	e9 0b 02 00 00       	jmp    8049e0a <submitr+0x702>
 8049bff:	83 ec 0c             	sub    $0xc,%esp
 8049c02:	8d 84 24 58 80 00 00 	lea    0x8058(%esp),%eax
 8049c09:	50                   	push   %eax
 8049c0a:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8049c0e:	50                   	push   %eax
 8049c0f:	8d 84 24 60 60 00 00 	lea    0x6060(%esp),%eax
 8049c16:	50                   	push   %eax
 8049c17:	68 77 ab 04 08       	push   $0x804ab77
 8049c1c:	8d 84 24 68 20 00 00 	lea    0x2068(%esp),%eax
 8049c23:	50                   	push   %eax
 8049c24:	e8 87 ec ff ff       	call   80488b0 <__isoc99_sscanf@plt>
 8049c29:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8049c2d:	83 c4 20             	add    $0x20,%esp
 8049c30:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049c35:	0f 84 c4 00 00 00    	je     8049cff <submitr+0x5f7>
 8049c3b:	83 ec 08             	sub    $0x8,%esp
 8049c3e:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049c45:	52                   	push   %edx
 8049c46:	50                   	push   %eax
 8049c47:	68 88 aa 04 08       	push   $0x804aa88
 8049c4c:	6a ff                	push   $0xffffffff
 8049c4e:	6a 01                	push   $0x1
 8049c50:	ff 74 24 34          	pushl  0x34(%esp)
 8049c54:	e8 07 ed ff ff       	call   8048960 <__sprintf_chk@plt>
 8049c59:	83 c4 14             	add    $0x14,%esp
 8049c5c:	ff 74 24 14          	pushl  0x14(%esp)
 8049c60:	e8 db ec ff ff       	call   8048940 <close@plt>
 8049c65:	83 c4 10             	add    $0x10,%esp
 8049c68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c6d:	e9 98 01 00 00       	jmp    8049e0a <submitr+0x702>
 8049c72:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049c77:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049c7e:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049c82:	e8 ad f9 ff ff       	call   8049634 <rio_readlineb>
 8049c87:	85 c0                	test   %eax,%eax
 8049c89:	7f 74                	jg     8049cff <submitr+0x5f7>
 8049c8b:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049c8f:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049c95:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049c9c:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049ca3:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049caa:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049cb1:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049cb8:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049cbf:	c7 40 1c 20 68 65 61 	movl   $0x61656820,0x1c(%eax)
 8049cc6:	c7 40 20 64 65 72 73 	movl   $0x73726564,0x20(%eax)
 8049ccd:	c7 40 24 20 66 72 6f 	movl   $0x6f726620,0x24(%eax)
 8049cd4:	c7 40 28 6d 20 73 65 	movl   $0x6573206d,0x28(%eax)
 8049cdb:	c7 40 2c 72 76 65 72 	movl   $0x72657672,0x2c(%eax)
 8049ce2:	c6 40 30 00          	movb   $0x0,0x30(%eax)
 8049ce6:	83 ec 0c             	sub    $0xc,%esp
 8049ce9:	ff 74 24 14          	pushl  0x14(%esp)
 8049ced:	e8 4e ec ff ff       	call   8048940 <close@plt>
 8049cf2:	83 c4 10             	add    $0x10,%esp
 8049cf5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cfa:	e9 0b 01 00 00       	jmp    8049e0a <submitr+0x702>
 8049cff:	80 bc 24 4c 20 00 00 	cmpb   $0xd,0x204c(%esp)
 8049d06:	0d 
 8049d07:	0f 85 65 ff ff ff    	jne    8049c72 <submitr+0x56a>
 8049d0d:	80 bc 24 4d 20 00 00 	cmpb   $0xa,0x204d(%esp)
 8049d14:	0a 
 8049d15:	0f 85 57 ff ff ff    	jne    8049c72 <submitr+0x56a>
 8049d1b:	80 bc 24 4e 20 00 00 	cmpb   $0x0,0x204e(%esp)
 8049d22:	00 
 8049d23:	0f 85 49 ff ff ff    	jne    8049c72 <submitr+0x56a>
 8049d29:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049d2e:	8d 94 24 4c 20 00 00 	lea    0x204c(%esp),%edx
 8049d35:	8d 44 24 40          	lea    0x40(%esp),%eax
 8049d39:	e8 f6 f8 ff ff       	call   8049634 <rio_readlineb>
 8049d3e:	85 c0                	test   %eax,%eax
 8049d40:	7f 7b                	jg     8049dbd <submitr+0x6b5>
 8049d42:	8b 44 24 18          	mov    0x18(%esp),%eax
 8049d46:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 8049d4c:	c7 40 04 72 3a 20 43 	movl   $0x43203a72,0x4(%eax)
 8049d53:	c7 40 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%eax)
 8049d5a:	c7 40 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%eax)
 8049d61:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049d68:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049d6f:	c7 40 18 72 65 61 64 	movl   $0x64616572,0x18(%eax)
 8049d76:	c7 40 1c 20 73 74 61 	movl   $0x61747320,0x1c(%eax)
 8049d7d:	c7 40 20 74 75 73 20 	movl   $0x20737574,0x20(%eax)
 8049d84:	c7 40 24 6d 65 73 73 	movl   $0x7373656d,0x24(%eax)
 8049d8b:	c7 40 28 61 67 65 20 	movl   $0x20656761,0x28(%eax)
 8049d92:	c7 40 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%eax)
 8049d99:	c7 40 30 20 73 65 72 	movl   $0x72657320,0x30(%eax)
 8049da0:	c7 40 34 76 65 72 00 	movl   $0x726576,0x34(%eax)
 8049da7:	83 ec 0c             	sub    $0xc,%esp
 8049daa:	ff 74 24 14          	pushl  0x14(%esp)
 8049dae:	e8 8d eb ff ff       	call   8048940 <close@plt>
 8049db3:	83 c4 10             	add    $0x10,%esp
 8049db6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049dbb:	eb 4d                	jmp    8049e0a <submitr+0x702>
 8049dbd:	83 ec 08             	sub    $0x8,%esp
 8049dc0:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049dc7:	50                   	push   %eax
 8049dc8:	8b 7c 24 24          	mov    0x24(%esp),%edi
 8049dcc:	57                   	push   %edi
 8049dcd:	e8 3e ea ff ff       	call   8048810 <strcpy@plt>
 8049dd2:	83 c4 04             	add    $0x4,%esp
 8049dd5:	ff 74 24 14          	pushl  0x14(%esp)
 8049dd9:	e8 62 eb ff ff       	call   8048940 <close@plt>
 8049dde:	0f b6 17             	movzbl (%edi),%edx
 8049de1:	b8 4f 00 00 00       	mov    $0x4f,%eax
 8049de6:	83 c4 10             	add    $0x10,%esp
 8049de9:	29 d0                	sub    %edx,%eax
 8049deb:	75 13                	jne    8049e00 <submitr+0x6f8>
 8049ded:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8049df1:	b8 4b 00 00 00       	mov    $0x4b,%eax
 8049df6:	29 d0                	sub    %edx,%eax
 8049df8:	75 06                	jne    8049e00 <submitr+0x6f8>
 8049dfa:	0f b6 47 02          	movzbl 0x2(%edi),%eax
 8049dfe:	f7 d8                	neg    %eax
 8049e00:	85 c0                	test   %eax,%eax
 8049e02:	0f 95 c0             	setne  %al
 8049e05:	0f b6 c0             	movzbl %al,%eax
 8049e08:	f7 d8                	neg    %eax
 8049e0a:	8b bc 24 4c a0 00 00 	mov    0xa04c(%esp),%edi
 8049e11:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 8049e18:	0f 84 a9 00 00 00    	je     8049ec7 <submitr+0x7bf>
 8049e1e:	e9 9f 00 00 00       	jmp    8049ec2 <submitr+0x7ba>
 8049e23:	a1 b8 aa 04 08       	mov    0x804aab8,%eax
 8049e28:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8049e2c:	89 07                	mov    %eax,(%edi)
 8049e2e:	a1 f7 aa 04 08       	mov    0x804aaf7,%eax
 8049e33:	89 47 3f             	mov    %eax,0x3f(%edi)
 8049e36:	89 f8                	mov    %edi,%eax
 8049e38:	83 c7 04             	add    $0x4,%edi
 8049e3b:	83 e7 fc             	and    $0xfffffffc,%edi
 8049e3e:	29 f8                	sub    %edi,%eax
 8049e40:	be b8 aa 04 08       	mov    $0x804aab8,%esi
 8049e45:	29 c6                	sub    %eax,%esi
 8049e47:	83 c0 43             	add    $0x43,%eax
 8049e4a:	c1 e8 02             	shr    $0x2,%eax
 8049e4d:	89 c1                	mov    %eax,%ecx
 8049e4f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049e51:	83 ec 0c             	sub    $0xc,%esp
 8049e54:	ff 74 24 14          	pushl  0x14(%esp)
 8049e58:	e8 e3 ea ff ff       	call   8048940 <close@plt>
 8049e5d:	83 c4 10             	add    $0x10,%esp
 8049e60:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e65:	eb a3                	jmp    8049e0a <submitr+0x702>
 8049e67:	8d 84 24 4c 40 00 00 	lea    0x404c(%esp),%eax
 8049e6e:	50                   	push   %eax
 8049e6f:	ff 74 24 18          	pushl  0x18(%esp)
 8049e73:	ff 74 24 18          	pushl  0x18(%esp)
 8049e77:	ff 74 24 18          	pushl  0x18(%esp)
 8049e7b:	68 fc aa 04 08       	push   $0x804aafc
 8049e80:	68 00 20 00 00       	push   $0x2000
 8049e85:	6a 01                	push   $0x1
 8049e87:	8d bc 24 68 20 00 00 	lea    0x2068(%esp),%edi
 8049e8e:	57                   	push   %edi
 8049e8f:	e8 cc ea ff ff       	call   8048960 <__sprintf_chk@plt>
 8049e94:	b8 00 00 00 00       	mov    $0x0,%eax
 8049e99:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049e9e:	f2 ae                	repnz scas %es:(%edi),%al
 8049ea0:	f7 d1                	not    %ecx
 8049ea2:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049ea5:	83 c4 20             	add    $0x20,%esp
 8049ea8:	89 fb                	mov    %edi,%ebx
 8049eaa:	8d b4 24 4c 20 00 00 	lea    0x204c(%esp),%esi
 8049eb1:	8b 6c 24 08          	mov    0x8(%esp),%ebp
 8049eb5:	85 ff                	test   %edi,%edi
 8049eb7:	0f 85 00 fc ff ff    	jne    8049abd <submitr+0x3b5>
 8049ebd:	e9 8f fc ff ff       	jmp    8049b51 <submitr+0x449>
 8049ec2:	e8 39 e9 ff ff       	call   8048800 <__stack_chk_fail@plt>
 8049ec7:	81 c4 5c a0 00 00    	add    $0xa05c,%esp
 8049ecd:	5b                   	pop    %ebx
 8049ece:	5e                   	pop    %esi
 8049ecf:	5f                   	pop    %edi
 8049ed0:	5d                   	pop    %ebp
 8049ed1:	c3                   	ret    

08049ed2 <init_timeout>:
 8049ed2:	53                   	push   %ebx
 8049ed3:	83 ec 08             	sub    $0x8,%esp
 8049ed6:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8049eda:	85 db                	test   %ebx,%ebx
 8049edc:	74 24                	je     8049f02 <init_timeout+0x30>
 8049ede:	83 ec 08             	sub    $0x8,%esp
 8049ee1:	68 11 96 04 08       	push   $0x8049611
 8049ee6:	6a 0e                	push   $0xe
 8049ee8:	e8 e3 e8 ff ff       	call   80487d0 <signal@plt>
 8049eed:	85 db                	test   %ebx,%ebx
 8049eef:	b8 00 00 00 00       	mov    $0x0,%eax
 8049ef4:	0f 48 d8             	cmovs  %eax,%ebx
 8049ef7:	89 1c 24             	mov    %ebx,(%esp)
 8049efa:	e8 f1 e8 ff ff       	call   80487f0 <alarm@plt>
 8049eff:	83 c4 10             	add    $0x10,%esp
 8049f02:	83 c4 08             	add    $0x8,%esp
 8049f05:	5b                   	pop    %ebx
 8049f06:	c3                   	ret    

08049f07 <init_driver>:
 8049f07:	57                   	push   %edi
 8049f08:	56                   	push   %esi
 8049f09:	53                   	push   %ebx
 8049f0a:	83 ec 28             	sub    $0x28,%esp
 8049f0d:	8b 74 24 38          	mov    0x38(%esp),%esi
 8049f11:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049f17:	89 44 24 24          	mov    %eax,0x24(%esp)
 8049f1b:	31 c0                	xor    %eax,%eax
 8049f1d:	6a 01                	push   $0x1
 8049f1f:	6a 0d                	push   $0xd
 8049f21:	e8 aa e8 ff ff       	call   80487d0 <signal@plt>
 8049f26:	83 c4 08             	add    $0x8,%esp
 8049f29:	6a 01                	push   $0x1
 8049f2b:	6a 1d                	push   $0x1d
 8049f2d:	e8 9e e8 ff ff       	call   80487d0 <signal@plt>
 8049f32:	83 c4 08             	add    $0x8,%esp
 8049f35:	6a 01                	push   $0x1
 8049f37:	6a 1d                	push   $0x1d
 8049f39:	e8 92 e8 ff ff       	call   80487d0 <signal@plt>
 8049f3e:	83 c4 0c             	add    $0xc,%esp
 8049f41:	6a 00                	push   $0x0
 8049f43:	6a 01                	push   $0x1
 8049f45:	6a 02                	push   $0x2
 8049f47:	e8 a4 e9 ff ff       	call   80488f0 <socket@plt>
 8049f4c:	83 c4 10             	add    $0x10,%esp
 8049f4f:	85 c0                	test   %eax,%eax
 8049f51:	79 4e                	jns    8049fa1 <init_driver+0x9a>
 8049f53:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049f59:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 8049f60:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 8049f67:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 8049f6e:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049f75:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049f7c:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 8049f83:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 8049f8a:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 8049f91:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 8049f97:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049f9c:	e9 1f 01 00 00       	jmp    804a0c0 <init_driver+0x1b9>
 8049fa1:	89 c3                	mov    %eax,%ebx
 8049fa3:	83 ec 0c             	sub    $0xc,%esp
 8049fa6:	68 88 ab 04 08       	push   $0x804ab88
 8049fab:	e8 60 e9 ff ff       	call   8048910 <gethostbyname@plt>
 8049fb0:	83 c4 10             	add    $0x10,%esp
 8049fb3:	85 c0                	test   %eax,%eax
 8049fb5:	75 6c                	jne    804a023 <init_driver+0x11c>
 8049fb7:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 8049fbd:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 8049fc4:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 8049fcb:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 8049fd2:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 8049fd9:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 8049fe0:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 8049fe7:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 8049fee:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 8049ff5:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 8049ffc:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 804a003:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 804a009:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 804a00d:	83 ec 0c             	sub    $0xc,%esp
 804a010:	53                   	push   %ebx
 804a011:	e8 2a e9 ff ff       	call   8048940 <close@plt>
 804a016:	83 c4 10             	add    $0x10,%esp
 804a019:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a01e:	e9 9d 00 00 00       	jmp    804a0c0 <init_driver+0x1b9>
 804a023:	8d 7c 24 0c          	lea    0xc(%esp),%edi
 804a027:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a02e:	00 
 804a02f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a036:	00 
 804a037:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a03e:	00 
 804a03f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a046:	00 
 804a047:	66 c7 44 24 0c 02 00 	movw   $0x2,0xc(%esp)
 804a04e:	6a 0c                	push   $0xc
 804a050:	ff 70 0c             	pushl  0xc(%eax)
 804a053:	8b 40 10             	mov    0x10(%eax),%eax
 804a056:	ff 30                	pushl  (%eax)
 804a058:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 804a05c:	50                   	push   %eax
 804a05d:	e8 fe e7 ff ff       	call   8048860 <__memmove_chk@plt>
 804a062:	66 c7 44 24 1e 43 31 	movw   $0x3143,0x1e(%esp)
 804a069:	83 c4 0c             	add    $0xc,%esp
 804a06c:	6a 10                	push   $0x10
 804a06e:	57                   	push   %edi
 804a06f:	53                   	push   %ebx
 804a070:	e8 bb e8 ff ff       	call   8048930 <connect@plt>
 804a075:	83 c4 10             	add    $0x10,%esp
 804a078:	85 c0                	test   %eax,%eax
 804a07a:	79 2a                	jns    804a0a6 <init_driver+0x19f>
 804a07c:	83 ec 0c             	sub    $0xc,%esp
 804a07f:	68 88 ab 04 08       	push   $0x804ab88
 804a084:	68 48 ab 04 08       	push   $0x804ab48
 804a089:	6a ff                	push   $0xffffffff
 804a08b:	6a 01                	push   $0x1
 804a08d:	56                   	push   %esi
 804a08e:	e8 cd e8 ff ff       	call   8048960 <__sprintf_chk@plt>
 804a093:	83 c4 14             	add    $0x14,%esp
 804a096:	53                   	push   %ebx
 804a097:	e8 a4 e8 ff ff       	call   8048940 <close@plt>
 804a09c:	83 c4 10             	add    $0x10,%esp
 804a09f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a0a4:	eb 1a                	jmp    804a0c0 <init_driver+0x1b9>
 804a0a6:	83 ec 0c             	sub    $0xc,%esp
 804a0a9:	53                   	push   %ebx
 804a0aa:	e8 91 e8 ff ff       	call   8048940 <close@plt>
 804a0af:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a0b4:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a0b8:	83 c4 10             	add    $0x10,%esp
 804a0bb:	b8 00 00 00 00       	mov    $0x0,%eax
 804a0c0:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804a0c4:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a0cb:	74 05                	je     804a0d2 <init_driver+0x1cb>
 804a0cd:	e8 2e e7 ff ff       	call   8048800 <__stack_chk_fail@plt>
 804a0d2:	83 c4 20             	add    $0x20,%esp
 804a0d5:	5b                   	pop    %ebx
 804a0d6:	5e                   	pop    %esi
 804a0d7:	5f                   	pop    %edi
 804a0d8:	c3                   	ret    

0804a0d9 <driver_post>:
 804a0d9:	53                   	push   %ebx
 804a0da:	83 ec 08             	sub    $0x8,%esp
 804a0dd:	8b 44 24 10          	mov    0x10(%esp),%eax
 804a0e1:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
 804a0e5:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
 804a0ea:	74 26                	je     804a112 <driver_post+0x39>
 804a0ec:	83 ec 04             	sub    $0x4,%esp
 804a0ef:	ff 74 24 18          	pushl  0x18(%esp)
 804a0f3:	68 9d ab 04 08       	push   $0x804ab9d
 804a0f8:	6a 01                	push   $0x1
 804a0fa:	e8 e1 e7 ff ff       	call   80488e0 <__printf_chk@plt>
 804a0ff:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a104:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a108:	83 c4 10             	add    $0x10,%esp
 804a10b:	b8 00 00 00 00       	mov    $0x0,%eax
 804a110:	eb 3e                	jmp    804a150 <driver_post+0x77>
 804a112:	85 c0                	test   %eax,%eax
 804a114:	74 2c                	je     804a142 <driver_post+0x69>
 804a116:	80 38 00             	cmpb   $0x0,(%eax)
 804a119:	74 27                	je     804a142 <driver_post+0x69>
 804a11b:	83 ec 04             	sub    $0x4,%esp
 804a11e:	53                   	push   %ebx
 804a11f:	ff 74 24 1c          	pushl  0x1c(%esp)
 804a123:	68 b4 ab 04 08       	push   $0x804abb4
 804a128:	50                   	push   %eax
 804a129:	68 bb ab 04 08       	push   $0x804abbb
 804a12e:	68 31 43 00 00       	push   $0x4331
 804a133:	68 88 ab 04 08       	push   $0x804ab88
 804a138:	e8 cb f5 ff ff       	call   8049708 <submitr>
 804a13d:	83 c4 20             	add    $0x20,%esp
 804a140:	eb 0e                	jmp    804a150 <driver_post+0x77>
 804a142:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a147:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a14b:	b8 00 00 00 00       	mov    $0x0,%eax
 804a150:	83 c4 08             	add    $0x8,%esp
 804a153:	5b                   	pop    %ebx
 804a154:	c3                   	ret    
 804a155:	66 90                	xchg   %ax,%ax
 804a157:	66 90                	xchg   %ax,%ax
 804a159:	66 90                	xchg   %ax,%ax
 804a15b:	66 90                	xchg   %ax,%ax
 804a15d:	66 90                	xchg   %ax,%ax
 804a15f:	90                   	nop

0804a160 <__libc_csu_init>:
 804a160:	55                   	push   %ebp
 804a161:	57                   	push   %edi
 804a162:	56                   	push   %esi
 804a163:	53                   	push   %ebx
 804a164:	e8 47 e8 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a169:	81 c3 97 2e 00 00    	add    $0x2e97,%ebx
 804a16f:	83 ec 0c             	sub    $0xc,%esp
 804a172:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804a176:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804a17c:	e8 df e5 ff ff       	call   8048760 <_init>
 804a181:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 804a187:	29 c6                	sub    %eax,%esi
 804a189:	c1 fe 02             	sar    $0x2,%esi
 804a18c:	85 f6                	test   %esi,%esi
 804a18e:	74 25                	je     804a1b5 <__libc_csu_init+0x55>
 804a190:	31 ff                	xor    %edi,%edi
 804a192:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a198:	83 ec 04             	sub    $0x4,%esp
 804a19b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a19f:	ff 74 24 2c          	pushl  0x2c(%esp)
 804a1a3:	55                   	push   %ebp
 804a1a4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804a1ab:	83 c7 01             	add    $0x1,%edi
 804a1ae:	83 c4 10             	add    $0x10,%esp
 804a1b1:	39 f7                	cmp    %esi,%edi
 804a1b3:	75 e3                	jne    804a198 <__libc_csu_init+0x38>
 804a1b5:	83 c4 0c             	add    $0xc,%esp
 804a1b8:	5b                   	pop    %ebx
 804a1b9:	5e                   	pop    %esi
 804a1ba:	5f                   	pop    %edi
 804a1bb:	5d                   	pop    %ebp
 804a1bc:	c3                   	ret    
 804a1bd:	8d 76 00             	lea    0x0(%esi),%esi

0804a1c0 <__libc_csu_fini>:
 804a1c0:	f3 c3                	repz ret 

Disassembly of section .fini:

0804a1c4 <_fini>:
 804a1c4:	53                   	push   %ebx
 804a1c5:	83 ec 08             	sub    $0x8,%esp
 804a1c8:	e8 e3 e7 ff ff       	call   80489b0 <__x86.get_pc_thunk.bx>
 804a1cd:	81 c3 33 2e 00 00    	add    $0x2e33,%ebx
 804a1d3:	83 c4 08             	add    $0x8,%esp
 804a1d6:	5b                   	pop    %ebx
 804a1d7:	c3                   	ret    
